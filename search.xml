<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2018/08/01/hello-world/</url>
    <content><![CDATA[<p>记录输出的一行代码</p>
<h3 id="第一行代码"><a href="#第一行代码" class="headerlink" title="第一行代码"></a>第一行代码</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Hello</span> <span class="title class_">World</span>!</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>网易云音乐</title>
    <url>/2019/08/15/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90/</url>
    <content><![CDATA[<hr>
<p>使用react + 网易云服务接口，自己做了一个音乐播放器</p>
<ul>
<li>图示<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://cdn.staticaly.com/gh/sonderss/image-hosting@master/20220810/6.1g41u4apwun4.webp"
                      alt="image"
                ><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://cdn.staticaly.com/gh/sonderss/image-hosting@master/20220810/1.4juejniy9y80.webp"
                      alt="image"
                ><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://cdn.staticaly.com/gh/sonderss/image-hosting@master/20220810/5.2dz459utcet.webp"
                      alt="image"
                ></li>
</ul>
]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>React</tag>
        <tag>音乐</tag>
      </tags>
  </entry>
  <entry>
    <title>学习小站</title>
    <url>/2018/08/10/%E5%AD%A6%E4%B9%A0%E5%B0%8F%E7%AB%99/</url>
    <content><![CDATA[<hr>
<p>每天下了班学习前端，经过记不清的日日夜夜，写出了一个网站，因为域名xxx.club已经不能访问，所以只展示图示，以作纪念。</p>
<ul>
<li>图示<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://cdn.staticaly.com/gh/sonderss/image-hosting@master/20220810/1.14zp2i5vemyk.webp"
                      alt="image"
                ><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://cdn.staticaly.com/gh/sonderss/image-hosting@master/20220810/2.62b741bp8jk.webp"
                      alt="image"
                ><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://cdn.staticaly.com/gh/sonderss/image-hosting@master/20220810/3.5vz2pdiux8c0.webp"
                      alt="image"
                ><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://cdn.staticaly.com/gh/sonderss/image-hosting@master/20220810/4.75amganjpf00.webp"
                      alt="image"
                ></li>
</ul>
]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>一段往事</tag>
      </tags>
  </entry>
  <entry>
    <title>知乎</title>
    <url>/2019/02/18/%E7%9F%A5%E4%B9%8E/</url>
    <content><![CDATA[<hr>
<p>仿照知乎的网页登录做了一个静态页面</p>
<ul>
<li>部分代码<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;select id=<span class="string">&quot;firsttable1&quot;</span> value=<span class="string">&quot;&quot;</span> style=<span class="string">&quot;color: darkgray; font-size: 15px;&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;中国 + 86&quot;</span>&gt;</span>中国 + 86<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;美国 + 1&quot;</span>&gt;</span>美国 + 1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line">    ...</span><br><span class="line">    &lt;option value=<span class="string">&quot;西班牙+ 34&quot;</span>&gt;西班牙+ <span class="number">34</span>&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">body&#123;</span><br><span class="line">    <span class="attr">background</span>: #c5e3fd; </span><br><span class="line">    background-<span class="attr">image</span>: <span class="title function_">url</span>(img/知乎背景.<span class="property">png</span>); </span><br><span class="line">    <span class="comment">/* 不重复*/</span></span><br><span class="line">    background-<span class="attr">repeat</span>: no-repeat; </span><br><span class="line">    <span class="comment">/* 效果与100% 100%相同   等比例展现*/</span></span><br><span class="line">    background-<span class="attr">size</span>: cover;</span><br><span class="line">    <span class="comment">/* 不让背景图滑动 */</span></span><br><span class="line">    background-<span class="attr">attachment</span>: fixed;</span><br><span class="line">&#125;</span><br><span class="line">.<span class="property">zhihu</span>&#123;</span><br><span class="line">    <span class="attr">width</span>: 434px;</span><br><span class="line">    <span class="attr">height</span>: 538px;</span><br><span class="line">    background-<span class="attr">color</span>: white;</span><br><span class="line">    <span class="comment">/* 居中 显示 并且微调 */</span></span><br><span class="line">    <span class="attr">margin</span>: 45px auto;</span><br><span class="line">    padding-<span class="attr">right</span>: 20px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attr">input</span>::-webkit-input-placeholder&#123;</span><br><span class="line">    <span class="comment">/*浅灰色*/</span></span><br><span class="line">    <span class="attr">color</span>: #8590A6;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></li>
<li>图示<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://cdn.staticaly.com/gh/sonderss/image-hosting@master/20220810/zh.90gdzo37i3s.webp"
                      alt="image"
                ></li>
</ul>
]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>练手</tag>
      </tags>
  </entry>
  <entry>
    <title>伪类元素加字体图标的使用</title>
    <url>/2020/05/07/%E4%BC%AA%E7%B1%BB%E5%85%83%E7%B4%A0%E5%8A%A0%E5%AD%97%E4%BD%93%E5%9B%BE%E6%A0%87%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="伪类元素加字体图标的使用"><a href="#伪类元素加字体图标的使用" class="headerlink" title="伪类元素加字体图标的使用"></a>伪类元素加字体图标的使用</h2><ul>
<li>先在阿里图标库下载文件到本地</li>
</ul>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2019/12/24/15LWixb6M38tKzw.png"
                      alt="image"
                ></p>
<ul>
<li>找到.ttf文件放到项目中</li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2019/12/24/mIXBeL1Vx7guTDj.png"
                      alt="image"
                ></p>
<ul>
<li>这里需要注意 图标名称是Unicode名称</li>
<li></li>
</ul>
<h2 id="在page-json中使用字体图标"><a href="#在page-json中使用字体图标" class="headerlink" title="在page.json中使用字体图标"></a>在page.json中使用字体图标</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/03/30/QNyzrDuMa8Ik9FC.png"
                      alt="image"
                ></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> <span class="string">&quot;app-plus&quot;</span>:&#123;</span><br><span class="line">    <span class="string">&quot;titleNView&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;titleText&quot;</span>:<span class="string">&quot;我的收入&quot;</span>,</span><br><span class="line">        <span class="string">&quot;backgroundColor&quot;</span>:<span class="string">&quot;#030313&quot;</span>,</span><br><span class="line">        <span class="string">&quot;titleColor&quot;</span>:<span class="string">&quot;#FFE001&quot;</span>,</span><br><span class="line">        <span class="string">&quot;buttons&quot;</span>:[</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="comment">// 需要在图标名称前加&#x27;\u&#x27;</span></span><br><span class="line">            <span class="string">&quot;text&quot;</span>: <span class="string">&quot;全部门店\ue6b2&quot;</span>,</span><br><span class="line">            <span class="string">&quot;fontSize&quot;</span>:<span class="string">&quot;28rpx&quot;</span>,</span><br><span class="line">            <span class="comment">// 引入字体文件</span></span><br><span class="line">            <span class="string">&quot;fontSrc&quot;</span>:<span class="string">&quot;/static/font/iconfont.ttf&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>字体图标</tag>
      </tags>
  </entry>
  <entry>
    <title>jest测试框架</title>
    <url>/2020/05/19/jest%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/</url>
    <content><![CDATA[<hr>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://jestjs.io/img/blog/20-multi-runner.gif"
                      alt="image"
                ></p>
<h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">npm install --save-dev jest</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在pages.json的script项中添加&quot;test&quot;:&quot;jest&quot;</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;test&quot;</span>:<span class="string">&quot;jest&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">npm run jest</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 测试index.js</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// index.test.js</span></span><br><span class="line"><span class="comment">//  index的函数暴露是export function abc()&#123;&#125;</span></span><br><span class="line"><span class="keyword">const</span> &#123;abc&#125; = <span class="built_in">require</span>(<span class="string">&#x27;./index.js&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">test</span>(<span class="string">&#x27;测试abc这个函数&#x27;</span>,<span class="function">() =&gt;</span>&#123;</span><br><span class="line">    <span class="title function_">expect</span>(<span class="title function_">abc</span>(<span class="number">1</span>,<span class="number">2</span>)).<span class="title function_">toBe</span>(<span class="number">3</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>JEST</tag>
      </tags>
  </entry>
  <entry>
    <title>React如何循环遍历数组渲染</title>
    <url>/2020/05/09/React%E5%A6%82%E4%BD%95%E5%BE%AA%E7%8E%AF%E9%81%8D%E5%8E%86%E6%95%B0%E7%BB%84%E6%B8%B2%E6%9F%93/</url>
    <content><![CDATA[<h3 id="React循环遍历数组渲染问题"><a href="#React循环遍历数组渲染问题" class="headerlink" title="React循环遍历数组渲染问题"></a>React循环遍历数组渲染问题</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  arr.map(item =&gt; &#123;</span><br><span class="line">      return (</span><br><span class="line">         &lt;p&gt;&#123;item.name&#125;&lt;/p&gt;</span><br><span class="line">      )</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>react</tag>
      </tags>
  </entry>
  <entry>
    <title>React条件渲染</title>
    <url>/2020/05/09/React%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93/</url>
    <content><![CDATA[<h3 id="react条件渲染"><a href="#react条件渲染" class="headerlink" title="react条件渲染"></a>react条件渲染</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">state=&#123;</span><br><span class="line">    id:1</span><br><span class="line">&#125;</span><br><span class="line">//以下是render</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    return (</span><br><span class="line">    this.state.id === 1 ? </span><br><span class="line">    &lt;div&gt;</span><br><span class="line">       渲染条件为1的dom</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    :</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      渲染条件不为1的dom</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="img图片路径问题"><a href="#img图片路径问题" class="headerlink" title="img图片路径问题"></a>img图片路径问题</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//img的src需要require(&#x27;路径&#x27;)</span><br><span class="line">//backgroundImage需要字符串拼接</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;img src=&#123;require(&#x27;../accets/i.jpg&#x27;)&#125; /&gt;</span><br><span class="line"></span><br><span class="line">//注意如果是json返回的cdn地址直接写即可,例如</span><br><span class="line">&lt;img src=&#123;item.imgUrl&#125; /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div style=&#123;&#123;backgroundImage:&#x27;url(&#x27;+require(&#x27;../accets/1/jpg&#x27;) +&#x27;)&#x27;&#125;&#125;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>react</tag>
      </tags>
  </entry>
  <entry>
    <title>使用花生壳内网穿透</title>
    <url>/2020/06/08/%E4%BD%BF%E7%94%A8%E8%8A%B1%E7%94%9F%E5%A3%B3%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
    <content><![CDATA[<h3 id="花生壳内网穿透"><a href="#花生壳内网穿透" class="headerlink" title="花生壳内网穿透"></a>花生壳内网穿透</h3><p>摸索了两个小时，终于可以把博客内网穿透映射到外网了，开心。</p>
<hr>
<ul>
<li>花生壳  <a class="link"   href="https://b.oray.com/domain/" >https://b.oray.com/domain/<i class="fas fa-external-link-alt"></i></a></li>
</ul>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/06/08/qhLlygVYNojxaPs.png"
                      alt="image"
                ></p>
<ul>
<li>使用方法</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">内网穿透：创建一个项目，名称 -》 端口 -》 域名 -》 确认</span><br></pre></td></tr></table></figure>

<h5 id="遇到的一个坑"><a href="#遇到的一个坑" class="headerlink" title="遇到的一个坑"></a>遇到的一个坑</h5><p><strong>域名IP地址</strong>指向 0.0.0.0</p>
<p>这个问题搞了半天，不知道怎么回事，然后突然就好了（它自己就好了），在我得到了一个免费的域名时，再次出现该问题，猜想是缓存的问题，于是修改了DNS缓存为<strong>223.5.5.5</strong>立即解决了该问题。</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>内网穿透</tag>
        <tag>HTTP</tag>
      </tags>
  </entry>
  <entry>
    <title>exports</title>
    <url>/2020/05/19/exports/</url>
    <content><![CDATA[<h4 id="node模块"><a href="#node模块" class="headerlink" title="node模块"></a>node模块</h4><blockquote>
<p>node模块是基于commonJs规范的</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/05/19/blsnL6GvR3daFy9.png"
                      alt="image"
                ></p>
<ul>
<li>exports栗子</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">abc</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">abc</span> = abc</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入</span></span><br><span class="line"><span class="keyword">const</span> &#123;abc&#125; = <span class="built_in">require</span>(<span class="string">&#x27;./index.js&#x27;</span>)</span><br><span class="line"><span class="comment">// abc(1,2)</span></span><br></pre></td></tr></table></figure>
<ul>
<li>module.exports栗子</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">abc</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    abc</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入</span></span><br><span class="line"><span class="keyword">const</span> &#123;abc&#125; = <span class="built_in">require</span>(<span class="string">&#x27;./index.js&#x27;</span>)</span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line"><span class="comment">// const methods = require(&#x27;./index.js&#x27;)</span></span><br><span class="line"><span class="comment">// const &#123;abc&#125; = methods</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>commonJS</tag>
        <tag>exports</tag>
        <tag>module</tag>
      </tags>
  </entry>
  <entry>
    <title>export/export default</title>
    <url>/2020/05/19/export-default/</url>
    <content><![CDATA[<h4 id="ES导入导出模块"><a href="#ES导入导出模块" class="headerlink" title="ES导入导出模块"></a>ES导入导出模块</h4><blockquote>
<p>ES模块较为清晰，时常在项目中使用</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/05/19/eMklPNB8H4aYgKo.png"
                      alt="image"
                ></p>
<ul>
<li>export栗子</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export function abc (a,b)&#123;</span><br><span class="line">    return a + b</span><br><span class="line">&#125;</span><br><span class="line">// 或者这样导出</span><br><span class="line">export &#123;abc&#125;</span><br><span class="line">// 引入</span><br><span class="line">import &#123;abc&#125; from &#x27;./index.js&#x27;</span><br></pre></td></tr></table></figure>

<ul>
<li>export default栗子</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">abc</span> (a,b)&#123;</span><br><span class="line">    <span class="keyword">return</span> a +b</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ttt</span> (a,b)&#123;</span><br><span class="line">    <span class="keyword">return</span> a +b</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    abc,</span><br><span class="line">    ttt</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 引入</span></span><br><span class="line"><span class="keyword">import</span> methods <span class="keyword">from</span> <span class="string">&#x27;./index.js&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>ES</tag>
        <tag>模块系统</tag>
        <tag>import</tag>
      </tags>
  </entry>
  <entry>
    <title>jest四个钩子函数</title>
    <url>/2020/06/07/jest%E5%9B%9B%E4%B8%AA%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<p> beforeAll </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">beforeAll(()  =&gt; &#123;</span><br><span class="line"> // console.log(&#x27;所有测试用例之前执行&#x27;)</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure>
<p>beforeEach </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">beforeEach(()  =&gt; &#123;</span><br><span class="line">   // console.log(&#x27;每个测试用例之前执行&#x27;)</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure>
<p>afterEach </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> afterEach(()  =&gt; &#123;</span><br><span class="line">   // console.log(&#x27;每个测试用例之后执行&#x27;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>afterAll </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">afterAll(() =&gt; &#123;</span><br><span class="line">   // console.log(&#x27;所有测试用例之后执行&#x27;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>JEST</tag>
        <tag>钩子函数</tag>
      </tags>
  </entry>
  <entry>
    <title>VS Code配置GoLang</title>
    <url>/2020/07/10/Code%E9%85%8D%E7%BD%AEGoLang/</url>
    <content><![CDATA[<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/07/10/43MJlz1RLsCTqoP.png"
                      alt="image"
                ><br>安装go </p>
<p><a class="link"   href="https://golang.google.cn/doc/install?download=go1.14.4.windows-amd64.msi" >https://golang.google.cn/doc/install?download=go1.14.4.windows-amd64.msi<i class="fas fa-external-link-alt"></i></a></p>
<p>新建一个工作区 GOPATH: </p>
<p>新建文件夹GO_ -》 创建 src bin pkg 三个文件夹</p>
<p>配置GOPATH：</p>
<p>系统变量 -》 新建 -》 变量名 GOPATH -》 变量值 （GO_ 文件夹所在的路径） </p>
<p>path -》 将安装地址添加进去  如：D:\GO\bin （安装时自动添加）</p>
<p>用户变量 -》 path %USERPROFILE%\go\bin （安装时自动添加） </p>
<p>配置代理 <a class="link"   href="https://goproxy.io/zh/" >https://goproxy.io/zh/<i class="fas fa-external-link-alt"></i></a></p>
<p>终端执行 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">go env -w GO111MODULE=on</span><br><span class="line">go env -w GOPROXY=https://goproxy.io,direct</span><br></pre></td></tr></table></figure>

<p>在GOPATH的src文件夹下新建 golang.org 及子文件夹 x 执行<br><br /></p>
<p> <code>git clone https://github.com/golang/tools.git tools</code></p>
<p>打开vscode 执行  <strong>ctrl + shift + p</strong>  <br /> </p>
<p>搜索<strong>Go:install&#x2F;Update Tools</strong>  <br /> </p>
<p>全选 -》 <strong>确定</strong></p>
<p>如果一切正常，则开始下载安装了。</p>
<p>如果不正常，则重新试一下，说不定会出现   SUCCEEDED<br /></p>
<p>如果一直失败，先不要慌，可以这样来做：<br /></p>
<p>根据失败提示，找到下载的git地址，这里以gocode为例<br /></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone  https://github.com/mdempsky/gocode.git  gocode</span><br></pre></td></tr></table></figure>

<p>在GOPATH下src对应的目录里执行上面的git  clone指令，如果没有这个文件夹就创建（github.com -》mdempsky ）<br /></p>
<p>回到vscode里，在GOPATH打开终端 <text style='color:green'>ctrl + &#96;</text>  ，执行 <br /></p>
<p><code>go get -v  github.com/mdempsky/gocode</code></p>
<p>这个时候，你的bin目录里就会有<strong>gocode.exe</strong>了</p>
<p>其他的同理，既可。<br /></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>GO</tag>
        <tag>本地测试</tag>
      </tags>
  </entry>
  <entry>
    <title>从零到一搭建个人博客（一）</title>
    <url>/2020/06/13/%E4%BB%8E%E9%9B%B6%E5%88%B0%E4%B8%80%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<blockquote>
<p>18年的时候，我做了我人生中第一个网站，从网站代码到服务器，域名…就这样，我开始了对新世界的探索之旅。</p>
</blockquote>
<p>18年那个网站，如今早已不能再访问，在它刚入世的时候，我拿给一个后端同事看…，后端同事表示不错，就是界面不敢恭维…<br /><br>纵使如此，我很开心，因此而受到了极大鼓舞，感谢当时的同事。<br /></p>
<p>就不扯以前的事了，在开始写这个系列之前，声明本人水平尚浅，写这类帖子不够专业，但会尽可能把我做这个博客用到的东西，以及如何解决遇到的问题都列出来，也算是一个记录吧。<br /></p>
<p><strong>所使用到的技术栈</strong></p>
<ul>
<li>React</li>
<li>AntdDesignUI</li>
<li>Nest</li>
</ul>
<blockquote>
<p>这个博客共有三个项目，两个前端项目，博客前台和后台管理系统，都使用React+AntD搭建，还有一个中台服务，使用nest做的，提供博客的数据服务。</p>
</blockquote>
<p><strong>React搭建前后台</strong></p>
<p>创建项目</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">yarn create react-app my-app --template typescript</span><br></pre></td></tr></table></figure>
<p>运行项目</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">yarn start</span><br></pre></td></tr></table></figure>

<p>前台部分分为以下几个部分，把他们拆分出来做，这样方便管理，结构也比较清晰。</p>
<ul>
<li>Author.tsx 个人简介</li>
<li>Header.tsx 公共头部</li>
<li>Footer.tsx 公共底部</li>
<li>Msg.tsx    留言模块</li>
<li>list.tsx   文章列表</li>
<li>detail.tsx 文章详情</li>
</ul>
<p>以上是前台部分的主要模块划分，然后把通用的部分封装成组件，提高效率及可复用性，避免写重复的代码。<br /></p>
<p><strong>Markdown</strong></p>
<p>本博客的文章内容皆由MD语法编写，那么文章详情就必须要可以解析MD语法，这里使用了一款插件。</p>
<ul>
<li>为什么使用MD语法编写博客内容</li>
<li>MD语法有哪些优点</li>
</ul>
<p>Markdown将Md语法编写的语言转换成了HTML内容，方便灵活，内容丰富。另外本博客的内容主要以学习笔记为主，所以会牵扯到代码部分，于是就选择了md的内容解析。<br /></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 安装插件</span></span><br><span class="line">npm install marked --save</span><br><span class="line">npm install highlight.<span class="property">js</span> </span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 手动引用样式</span></span><br><span class="line"><span class="keyword">import</span> hljs  <span class="keyword">from</span> <span class="string">&#x27;highlight.js&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;highlight.js/styles/github.css&#x27;</span></span><br><span class="line"><span class="comment">// 文章内容</span></span><br><span class="line"><span class="keyword">let</span> markdown = content</span><br><span class="line"><span class="keyword">const</span> render = <span class="keyword">new</span> marked.<span class="title class_">Renderer</span>()</span><br><span class="line">marked.<span class="title function_">setOptions</span>(&#123;</span><br><span class="line">  <span class="attr">renderer</span>:render,</span><br><span class="line">  <span class="attr">highlight</span>: <span class="function">(<span class="params">code</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> hljs.<span class="title function_">highlightAuto</span>(code).<span class="property">value</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">pedantic</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">gfm</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">breaks</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">sanitize</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">smartLists</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">smartypants</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">xhtml</span>: <span class="literal">false</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 解析成HTML</span></span><br><span class="line"><span class="keyword">let</span> html = <span class="title function_">marked</span>(markdown, &#123; <span class="attr">renderer</span>: render &#125;) </span><br><span class="line"><span class="comment">// 节点使用</span></span><br><span class="line">&lt;div dangerouslySetInnerHTML=&#123;&#123;<span class="attr">__html</span>:html&#125;&#125;&gt;&lt;/div&gt;</span><br><span class="line"><span class="comment">// 相关配置参考官方文档</span></span><br><span class="line"><span class="attr">https</span>:<span class="comment">//marked.js.org/#/USING_ADVANCED.md#highlight</span></span><br></pre></td></tr></table></figure>

<ul>
<li>路由配置</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 遍历路由列表</span></span><br><span class="line">&lt;<span class="title class_">Router</span> &gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Switch</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;</span></span><br><span class="line"><span class="language-xml">            routes.map((item,index)=&gt;</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">Route</span> <span class="attr">key</span>=<span class="string">&#123;index&#125;</span> <span class="attr">path</span>=<span class="string">&#123;item.path&#125;</span> <span class="attr">exact</span> <span class="attr">component</span>=<span class="string">&#123;item.component&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            )</span></span><br><span class="line"><span class="language-xml">        &#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Switch</span>&gt;</span></span></span><br><span class="line">&lt;/<span class="title class_">Router</span>&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>数据请求</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 安装</span></span><br><span class="line">npm install axios </span><br><span class="line"></span><br><span class="line"><span class="comment">// 封装示例</span></span><br><span class="line"><span class="keyword">const</span> http = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">    <span class="attr">baseURL</span>:<span class="string">&#x27;http://localhost:3001&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">xxx</span>(<span class="params">url,data,type = <span class="string">&#x27;GET&#x27;</span></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span>  <span class="keyword">await</span> <span class="title function_">http</span>(&#123;url,<span class="attr">params</span>:data, <span class="attr">method</span>:type&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>基本上，到这里准备工作就做的差不多了，src目录（个人）</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">src </span><br><span class="line">└─ components  <span class="comment">// 组件</span></span><br><span class="line">└─ api        <span class="comment">// 接口封装</span></span><br><span class="line">└─ <span class="keyword">static</span>    <span class="comment">// 静态文件</span></span><br><span class="line">└─ routers  <span class="comment">// 路由文件</span></span><br><span class="line">└─ views   <span class="comment">// 页面</span></span><br></pre></td></tr></table></figure>
<p>博客地址</p>
<p>使用浏览器打开：<a class="link"   href="https://sonders.cn/" >https://sonders.cn<i class="fas fa-external-link-alt"></i></a></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>blob</tag>
      </tags>
  </entry>
  <entry>
    <title>Nest搭建中台服务</title>
    <url>/2020/06/30/Nest%E6%90%AD%E5%BB%BA%E4%B8%AD%E5%8F%B0%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h3 id="NestJS介绍"><a href="#NestJS介绍" class="headerlink" title="NestJS介绍"></a>NestJS介绍</h3><blockquote>
<p>Nest.js是一个渐进的Node.js框架。它的核心思想是提供了一个层与层直接的耦合度极小、抽象化极高的一个架构体系。</p>
</blockquote>
<ul>
<li><p>为什么使用NestJS <br /><br>起初没打算使用Node来做，但得知了NestJS之后，忍不住想要试一试，于是就使用了NestJS。</p>
</li>
<li><p>NestJS中文网  <a class="link"   href="https://www.itying.com/nestjs/" >https://www.itying.com/nestjs/<i class="fas fa-external-link-alt"></i></a> <br /></p>
</li>
<li><p>在学习NestJS之前还需要了解TS相关 <a class="link"   href="https://www.tslang.cn/docs/home.html" >https://www.tslang.cn/docs/home.html<i class="fas fa-external-link-alt"></i></a><br /></p>
</li>
<li><p>NestJS使用体验<br /><br>NestJS就如介绍所说，耦合度低，层次分明，使用起来还挺好上手的。</p>
</li>
<li><p>安装（NodeJS环境）<br /><br>如果你不知道怎么安装Node可以看中文网 <a class="link"   href="http://nodejs.cn/download/" >http://nodejs.cn/download/<i class="fas fa-external-link-alt"></i></a><br>下载对应的文件，然后安装即可。</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 检查版本</span></span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<p>使用 Nest CLI 建立新项目非常简单</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">yarn <span class="variable language_">global</span> add @nestjs/cli</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建项目</span></span><br><span class="line">nest <span class="keyword">new</span> project-name </span><br><span class="line"></span><br><span class="line"><span class="comment">// 运行项目</span></span><br><span class="line">npm run <span class="attr">start</span>:dev</span><br></pre></td></tr></table></figure>

<p>创建后的主要文件简介</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">app.<span class="property">controller</span>.<span class="property">ts</span>  <span class="comment">//带有单个路由的基本控制器示例</span></span><br><span class="line">app.<span class="property">module</span>.<span class="property">ts</span> <span class="comment">//应用程序的根模块</span></span><br><span class="line">main.<span class="property">ts</span>  <span class="comment">//应用程序入口文件</span></span><br></pre></td></tr></table></figure>
<p>main.ts 入口文件，定义了请求端口，初始化的模块</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">NestFactory</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/core&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppModule</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./app.module&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">bootstrap</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 创建应用实例</span></span><br><span class="line">  <span class="keyword">const</span> app = <span class="keyword">await</span> <span class="title class_">NestFactory</span>.<span class="title function_">create</span>(<span class="title class_">AppModule</span>);</span><br><span class="line">  <span class="comment">// 处理跨域</span></span><br><span class="line">  app.<span class="title function_">enableCors</span>();</span><br><span class="line">  <span class="comment">// 服务端口</span></span><br><span class="line">  <span class="keyword">await</span> app.<span class="title function_">listen</span>(<span class="number">3001</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">bootstrap</span>();</span><br></pre></td></tr></table></figure>

<h4 id="主要文件作用及含义"><a href="#主要文件作用及含义" class="headerlink" title="主要文件作用及含义"></a>主要文件作用及含义</h4><ul>
<li><p>article.controller.ts</p>
<blockquote>
<p>提供接口，供客户端调用，这里仅提供接口，逻辑层在app.service.ts编写</p>
</blockquote>
</li>
<li><p>article.service.ts</p>
<blockquote>
<p>业务逻辑层，主要与数据库交互，操作数据库</p>
</blockquote>
</li>
<li><p>article.module.ts</p>
<blockquote>
<p>引入数据库表，注入依赖项(server)，控制器等</p>
</blockquote>
</li>
<li><p>article.interface.ts</p>
<blockquote>
<p>定义接口数据</p>
</blockquote>
</li>
<li><p>dto&#x2F;create-post.dto.ts</p>
<blockquote>
<p>将定义数据会怎样发送到网络，名称首字母需要大写，否则存入不到数据库</p>
</blockquote>
</li>
<li><p>schemas&#x2F;article.schema.ts</p>
<blockquote>
<p>定义将存储在数据库中的数据类型 与客户端信息json一致</p>
</blockquote>
</li>
</ul>
<p>nest创建指令</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 模块</span></span><br><span class="line">nest g <span class="variable language_">module</span> article</span><br><span class="line"><span class="comment">// 控制器</span></span><br><span class="line">nest g controller article</span><br><span class="line"><span class="comment">// 服务</span></span><br><span class="line">nest g service news</span><br></pre></td></tr></table></figure>

<h4 id="使用mongodb数据库"><a href="#使用mongodb数据库" class="headerlink" title="使用mongodb数据库"></a>使用mongodb数据库</h4><p>安装</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cnpm install --save @nestjs/mongoose mongoose</span><br></pre></td></tr></table></figure>

<ul>
<li>在app.module.ts中连接数据库</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 这里记得mongodb服务是打开的</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">MongooseModule</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/mongoose&#x27;</span>;</span><br><span class="line">@<span class="title class_">Module</span>(&#123;</span><br><span class="line">  <span class="comment">// blob本地数据库名</span></span><br><span class="line">  <span class="attr">imports</span>: [<span class="title class_">MongooseModule</span>.<span class="title function_">forRoot</span>(<span class="string">&#x27;mongodb://127.0.0.1:27017/blob&#x27;</span>,&#123; useNewUrlParser : <span class="literal">true</span> &#125;)]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppModule</span> &#123;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>article.module.ts使用</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">MongooseModule</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/mongoose&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ArticleSchema</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;../schemas/article.schema&#x27;</span>;</span><br><span class="line">@<span class="title class_">Module</span>(&#123;</span><br><span class="line">    <span class="comment">// collection article</span></span><br><span class="line">    <span class="attr">imports</span>: [<span class="title class_">MongooseModule</span>.<span class="title function_">forFeature</span>([&#123; <span class="attr">name</span>: <span class="string">&#x27;Article&#x27;</span>, <span class="attr">schema</span>: <span class="title class_">ArticleSchema</span>,<span class="attr">collection</span>:<span class="string">&quot;article&quot;</span> &#125;])]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">ArticleModule</span> &#123;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>配置article.schema</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义将存储在数据库中的数据类型 与客户端信息json一致</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> mongoose <span class="keyword">from</span> <span class="string">&#x27;mongoose&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">ArticleSchema</span> = <span class="keyword">new</span> mongoose.<span class="title class_">Schema</span>(&#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="title class_">String</span>,</span><br><span class="line">  <span class="attr">keywords</span>:<span class="title class_">String</span>,</span><br><span class="line">  <span class="attr">author</span>: <span class="title class_">Number</span>,</span><br><span class="line">  <span class="attr">status</span>: <span class="title class_">String</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>以上就是连接数据库的过程，这里需要注意mongodb的安装及启用，这里不再具体说明，可以自行百度。<br /></p>
<p>服务层service.ts</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/common&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Model</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;mongoose&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">InjectModel</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/mongoose&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Article</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./article.interface&#x27;</span>;</span><br><span class="line"> </span><br><span class="line">@<span class="title class_">Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">NewsService</span> &#123;</span><br><span class="line"> </span><br><span class="line">   <span class="title function_">constructor</span>(<span class="params">@InjectModel(<span class="string">&#x27;Article&#x27;</span>) private readonly articleModel: Model&lt;Article&gt;</span>) &#123;&#125;</span><br><span class="line">    <span class="comment">// 获取所有文章</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">getPosts</span>(): <span class="title class_">Promise</span>&lt;<span class="title class_">Article</span>[]&gt; &#123;</span><br><span class="line">        <span class="comment">//  倒序输出</span></span><br><span class="line">        <span class="keyword">const</span> posts = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">articleModel</span>.<span class="title function_">find</span>().<span class="title function_">sort</span>(&#123;<span class="attr">_id</span>:-<span class="number">1</span>&#125;);</span><br><span class="line">        <span class="keyword">return</span> posts;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>

<p>控制器定义api接口</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Controller</span>, <span class="title class_">Post</span>, <span class="title class_">UseGuards</span>, <span class="title class_">Body</span>, <span class="title class_">Get</span>, <span class="title class_">HttpStatus</span>, <span class="title class_">Res</span>, <span class="title class_">Query</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/common&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AuthGuard</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/passport&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ArticleService</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./article.service&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CreatePostDTO</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./dto/create-post.dto&#x27;</span>;</span><br><span class="line"></span><br><span class="line">@<span class="title class_">Controller</span>(<span class="string">&#x27;article&#x27;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">ArticleController</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"> private readonly  ariticleService: ArticleService</span>)&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取所有文章</span></span><br><span class="line">    @<span class="title class_">Get</span>(<span class="string">&#x27;getArticles&#x27;</span>)</span><br><span class="line">    <span class="comment">// @UseGuards(AuthGuard(&#x27;jwt&#x27;))  这里做了一个token验证，暂不使用</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">getPosts</span>(<span class="params">@Res() res</span>) &#123;</span><br><span class="line">        <span class="comment">// 使用service层服务</span></span><br><span class="line">        <span class="keyword">const</span> posts = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">ariticleService</span>.<span class="title function_">getPosts</span>();</span><br><span class="line">        <span class="comment">// 返回给客户端</span></span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="title class_">HttpStatus</span>.<span class="property">OK</span>).<span class="title function_">json</span>(posts);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 客户端调用 </span></span><br><span class="line"><span class="attr">http</span>:<span class="comment">//localhost:3001/article/getArticles</span></span><br></pre></td></tr></table></figure>
<p>关于问题</p>
<p>由于这个博客已经做了快一个月了吧，当时也没想着写总结，所以有些问题其实已经记不大清了，如果有什么问题可以发送邮箱，共同讨论。</p>
<p>以上是搭建博客中台的基本过程，由于是第一次使用NestJS，踩的坑不多也不少，总之整个过程还算顺利，而且自己写前后端其实是很爽的，做个人项目的话NestJS也算是比较合适的服务端框架了，上手较快，学习成本还算可以，很适合用来练手。第一次使用还是有很多不足的，在这里感谢<a class="link"   href="https://www.itying.com/nestjs/" >https://www.itying.com/nestjs/<i class="fas fa-external-link-alt"></i></a>   这个中文网，这个文档还是挺棒的。</p>
<p>本博客移动端（Android）下载：<a class="link"   href="https://www.pgyer.com/XnUz" >https://www.pgyer.com/XnUz<i class="fas fa-external-link-alt"></i></a></p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/06/28/Eh6Qv3rxjw2ekfK.png"
                      style='width:200px;height:200px'
                >]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>NestJS</tag>
      </tags>
  </entry>
  <entry>
    <title>next服务端渲染</title>
    <url>/2020/07/07/next%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B8%B2%E6%9F%93/</url>
    <content><![CDATA[<p>next  </p>
<blockquote>
<p>基于react技术栈的服务端渲染解决方案</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 安装脚手架快速创建项目</span></span><br><span class="line">npm install -g create-next-app</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建项目</span></span><br><span class="line">npx create-next-app next-create</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动项目</span></span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure>

<p>使用antd</p>
<p>安装依赖</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yarn add @zeit/next-css  antd  babel-plugin-import </span><br><span class="line"></span><br><span class="line">or </span><br><span class="line"></span><br><span class="line">npm i --save @zeit/next-css  antd  babel-plugin-import </span><br></pre></td></tr></table></figure>

<p>创建next-config.js</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const withCss = require(&quot;@zeit/next-css&quot;);</span><br><span class="line"></span><br><span class="line">if (typeof require !== &quot;undefined&quot;) &#123;</span><br><span class="line"></span><br><span class="line"> require.extensions[&quot;.css&quot;] = file =&gt; &#123;&#125;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">module.exports=withCss(&#123;&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>创建.babelrc</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    &quot;presets&quot;:[&quot;next/babel&quot;],</span><br><span class="line">    </span><br><span class="line"> &quot;plugins&quot;:[</span><br><span class="line">    </span><br><span class="line">    [</span><br><span class="line">        &quot;import&quot;,</span><br><span class="line">        &#123;</span><br><span class="line">        </span><br><span class="line">            &quot;libraryName&quot;:&quot;antd&quot;,</span><br><span class="line">            &quot;style&quot;:&quot;css&quot;</span><br><span class="line">    </span><br><span class="line">         &#125;</span><br><span class="line">    </span><br><span class="line">    ]</span><br><span class="line">    </span><br><span class="line">   ]</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>创建 ._app.js</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import App from &quot;next/app&quot;;</span><br><span class="line">import &quot;antd/dist/antd.css&quot;;</span><br><span class="line">export default App;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>NEXT</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Go搭建一个WEB服务</title>
    <url>/2020/07/10/%E4%BD%BF%E7%94%A8Go%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAWEB%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<blockquote>
<p>使用Go搭建服务比较方便，引入net&#x2F;http即可</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;fmt&quot;</span></span><br><span class="line">  <span class="string">&quot;net/http&quot;</span></span><br><span class="line">  <span class="string">&quot;encoding/json&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Data  定义一个数据结构</span></span><br><span class="line"><span class="keyword">type</span> Data <span class="keyword">struct</span>&#123;</span><br><span class="line">	Name <span class="type">string</span> <span class="string">`json:&quot;name&quot;`</span></span><br><span class="line">	Age <span class="type">int</span>  <span class="string">`json:&quot;age&quot;`</span></span><br><span class="line">	Sex <span class="type">bool</span>  <span class="string">`json:&quot;sex&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">testApi</span><span class="params">(w http.ResponseWriter, r *Request)</span></span>&#123;</span><br><span class="line">    <span class="comment">// 初始一个json数据 </span></span><br><span class="line">    data := Data&#123;</span><br><span class="line">		Name:<span class="string">&quot;sonderss&quot;</span>,</span><br><span class="line">		Age:<span class="number">24</span>,</span><br><span class="line">		Sex:<span class="literal">true</span>,</span><br><span class="line">	&#125;</span><br><span class="line">	r.ParseForm() <span class="comment">// 解析参数</span></span><br><span class="line"></span><br><span class="line">	jsonStu, _ := json.Marshal(data)  <span class="comment">// 将数据转为json对象格式</span></span><br><span class="line"></span><br><span class="line">	w.Write(jsonStu)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 定义url调用对应的业务接口</span></span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/&quot;</span>,testApi)</span><br><span class="line">    <span class="comment">// 监听端口</span></span><br><span class="line">    http.ListenAndServe(<span class="string">&quot;:8005&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>HTTP</tag>
        <tag>GO</tag>
      </tags>
  </entry>
  <entry>
    <title>小程序图片内容检测</title>
    <url>/2020/07/17/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9B%BE%E7%89%87%E5%86%85%E5%AE%B9%E6%A3%80%E6%B5%8B/</url>
    <content><![CDATA[<h3 id="检测违规图片"><a href="#检测违规图片" class="headerlink" title="检测违规图片"></a>检测违规图片</h3><blockquote>
<p>在小程序里做了一个图床，结果在审核时提醒说图片没有经过内容审核，会导致小程序的滥用，于是开始做图片的内容审核，也就是黄色，政治这些敏感信息的自动过滤</p>
</blockquote>
<p>踩了一些坑，记录一下</p>
<p>文档 <a class="link"   href="https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/sec-check/security.imgSecCheck.html" >https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/sec-check/security.imgSecCheck.html<i class="fas fa-external-link-alt"></i></a> <br /></p>
<p>注意： 我是在云函数里调用该API</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取buffer res.path为上传图片的路径</span></span><br><span class="line"><span class="keyword">let</span> buffer = wx.<span class="title function_">getFileSystemManager</span>().<span class="title function_">readFileSync</span>(res.<span class="property">path</span>)</span><br><span class="line"><span class="comment">// 调用云函数判断图片内容是否涉黄 违规</span></span><br><span class="line">wx.<span class="property">cloud</span>.<span class="title function_">callFunction</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;checkImages&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;<span class="attr">imageUrl</span>:buffer,<span class="attr">type</span>:res.<span class="property">type</span>&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 云函数入口</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">main</span> = <span class="keyword">async</span> (event, context) =&gt; &#123;</span><br><span class="line"> <span class="comment">// 调用cloud.openapi.security.imgSecCheck </span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span>  cloud.<span class="property">openapi</span>.<span class="property">security</span>.<span class="title function_">imgSecCheck</span>(&#123;</span><br><span class="line">      <span class="attr">media</span>: &#123;</span><br><span class="line">        <span class="attr">contentType</span>: <span class="string">`image/<span class="subst">$&#123;event.type&#125;</span>`</span>,</span><br><span class="line">        <span class="attr">value</span>:  <span class="title class_">Buffer</span>.<span class="title function_">from</span>(event.<span class="property">imageUrl</span>)  <span class="comment">// 这里传一个buffer </span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>内容检测</tag>
        <tag>一个小坑</tag>
      </tags>
  </entry>
  <entry>
    <title>关于切片</title>
    <url>/2020/07/20/%E5%85%B3%E4%BA%8E%E5%88%87%E7%89%87/</url>
    <content><![CDATA[<blockquote>
<p>刚开始看到切片时，还真不知道是什么，了解以后，原来就是对数组的一层封装，因为在Go里，数组是有局限性的，切片的话就很灵活了。</p>
</blockquote>
<p>废话少说，直接贴代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;sort&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func <span class="title function_">test1</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">var</span> a = <span class="title function_">make</span>([]string, <span class="number">5</span>, <span class="number">10</span>)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">		a = <span class="title function_">append</span>(a, fmt.<span class="title class_">Sprintf</span>(<span class="string">&quot;%v&quot;</span>, i))</span><br><span class="line">	&#125;</span><br><span class="line">	fmt.<span class="title class_">Println</span>(a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请使用内置的sort包对数组var a = [...]int&#123;3, 7, 8, 9, 1&#125;进行排序</span></span><br><span class="line">func <span class="title function_">test2</span>(<span class="params"></span>) &#123;</span><br><span class="line">	<span class="keyword">var</span> a = [...]int&#123;<span class="number">3</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">1</span>&#125;</span><br><span class="line">	sort.<span class="title class_">Ints</span>(a[:])</span><br><span class="line">	fmt.<span class="title class_">Println</span>(a) <span class="comment">// [1 3 7 8 9]</span></span><br><span class="line">	<span class="comment">// 降序排序</span></span><br><span class="line">	sort.<span class="title class_">Sort</span>(sort.<span class="title class_">Reverse</span>(sort.<span class="title class_">IntSlice</span>(a[:])))</span><br><span class="line">	fmt.<span class="title class_">Println</span>(a) <span class="comment">// [9 8 7 3 1]</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func <span class="title function_">main</span>(<span class="params"></span>) &#123;</span><br><span class="line">	<span class="comment">// 定义一个切片并初始化</span></span><br><span class="line">	a := []int&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">	<span class="comment">// 追加元素</span></span><br><span class="line">	a = <span class="title function_">append</span>(a, <span class="number">4</span>)</span><br><span class="line">	<span class="comment">// 追加另一个切片</span></span><br><span class="line">	<span class="keyword">var</span> b = []int&#123;<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;</span><br><span class="line">	a = <span class="title function_">append</span>(a, b...) <span class="comment">// [1 2 3 4 5 6 7]</span></span><br><span class="line">	fmt.<span class="title class_">Println</span>(a)</span><br><span class="line">	<span class="comment">// 删除切片的某项</span></span><br><span class="line">	a = <span class="title function_">append</span>(a[:<span class="number">1</span>], a[<span class="number">2</span>:]...) <span class="comment">// [1 3 4 5 6 7]</span></span><br><span class="line">	fmt.<span class="title class_">Println</span>(a)</span><br><span class="line">	<span class="comment">// 遍历切片</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="title function_">len</span>(a); i++ &#123;</span><br><span class="line">		fmt.<span class="title class_">Println</span>(i, a[i])</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 条件判断</span></span><br><span class="line">	<span class="keyword">var</span> c int</span><br><span class="line">	<span class="keyword">if</span> a[<span class="number">4</span>] == <span class="number">6</span> &#123;</span><br><span class="line">		c = a[<span class="number">4</span>]</span><br><span class="line">	&#125;</span><br><span class="line">	fmt.<span class="title class_">Println</span>(c) <span class="comment">// 6</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 直接赋值给另一个切片</span></span><br><span class="line">	d := a</span><br><span class="line">	fmt.<span class="title class_">Println</span>(d) <span class="comment">// [1 3 4 5 6 7]</span></span><br><span class="line">	<span class="comment">// 修改D的某项</span></span><br><span class="line">	d[<span class="number">1</span>] = <span class="number">2</span></span><br><span class="line">	fmt.<span class="title class_">Println</span>(d, a) <span class="comment">//  [1 2 4 5 6 7] [1 2 4 5 6 7]</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 深拷贝 copy()</span></span><br><span class="line">	e := []int&#123;<span class="number">0</span>, <span class="number">0</span>&#125;</span><br><span class="line">	<span class="title function_">copy</span>(e, a)</span><br><span class="line">	fmt.<span class="title class_">Println</span>(e)</span><br><span class="line">	e[<span class="number">0</span>] = <span class="number">5</span></span><br><span class="line">	fmt.<span class="title class_">Println</span>(e, a) <span class="comment">// [5 2] [1 2 4 5 6 7]</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 深拷贝  4 -》 长度 6 -》 容量</span></span><br><span class="line">	f := <span class="title function_">make</span>([]int, <span class="number">4</span>, <span class="number">6</span>)</span><br><span class="line">	<span class="title function_">copy</span>(f, a)</span><br><span class="line">	f[<span class="number">0</span>] = <span class="number">5</span></span><br><span class="line">	fmt.<span class="title class_">Println</span>(f, a) <span class="comment">// [5 2 4 5] [1 2 4 5 6 7]</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 小试牛刀</span></span><br><span class="line">	<span class="title function_">test1</span>() <span class="comment">//[     0 1 2 3 4 5 6 7 8 9]</span></span><br><span class="line">	<span class="title function_">test2</span>() <span class="comment">// [1 3 7 8 9]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>切片</tag>
        <tag>Go</tag>
      </tags>
  </entry>
  <entry>
    <title>客服消息发送收款码之异想天开</title>
    <url>/2020/07/23/%E5%AE%A2%E6%9C%8D%E6%B6%88%E6%81%AF%E5%8F%91%E9%80%81%E6%94%B6%E6%AC%BE%E7%A0%81%E4%B9%8B%E5%BC%82%E6%83%B3%E5%A4%A9%E5%BC%80/</url>
    <content><![CDATA[<h4 id="客服消息"><a href="#客服消息" class="headerlink" title="客服消息"></a>客服消息</h4><p>最近想在小程序中实现收款的功能，但是个人小程序不能开发支付类，所以想通过收款码来实现，最开始是想给一个图片然后引导长按识别就完事了，结果小程序中不能识别二维码…那就不做了吗，不，为了赚点钱(no way)绞尽脑汁，于是想着从客服消息那里，发送收款码，这样就可以识别了。<br /></p>
<p>第一步：开发者工具 -》 云开发 -》 设置 -》  全局设置 - 添加消息推送配置。消息类型对应收包的 MsgType，事件类型对应收包的 Event。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/07/22/kdsbcO7Ua5oVzPn.png"
                      alt="F2E81327-EAE3-46ff-8321-8304809B7EF6.png"
                ></p>
<p>第二步：云函数中处理消息</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/07/22/OpARGLzFWjtoS5H.png"
                      alt="ddddBC.png"
                ></p>
<p>云函数中config.json的配置</p>
<blockquote>
<p>需在 config.json 中配置 customerServiceMessage.uploadTempMedia API 的权限，<a class="link"   href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/guide/openapi/openapi.html#%E4%BA%91%E8%B0%83%E7%94%A8" >详情<i class="fas fa-external-link-alt"></i></a></p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;permissions&quot;: &#123;</span><br><span class="line">    &quot;openapi&quot;: [</span><br><span class="line">      &quot;customerServiceMessage.uploadTempMedia&quot;, </span><br><span class="line">      &quot;customerServiceMessage.send&quot;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>最终效果</strong></p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/07/22/t5MmlWnZXHQOAb9.png"
                       style="width:220px;height:400px"
                >
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/07/22/POzf1wSTKv5RuDm.jpg"
                       style="width:220px;height:400px"
                >


<br />
<br />
<br /><br />


<p>注意:<br>以上这种方法，的确实现了在特定入口进入会话页时，客服主动发送收款码的需求，但是！！！ 这种实现是有前提的，那就是需要客户主动与小程序产生了交互，小程序才有5次发送消息的次数，假设次数用完，小程序是发送不了信息的。另外如果用户在48小时内再次产生交互，那么又会获得5次机会，但不叠加。 于是，我笑了。<br>这里是<a class="link"   href="https://developers.weixin.qq.com/miniprogram/introduction/custom.html#%E4%B8%8B%E5%8F%91%E6%9D%A1%E4%BB%B6%E8%AF%B4%E6%98%8E" >文档<i class="fas fa-external-link-alt"></i></a></p>
<p>于是，我开始思考人生的意义，人生是不是永无止境的轮回，时间在哪里停止，又在哪里结…</p>
<p>想了半天，还是老老实实做引导页吧，所谓引导页就是引导着用户往火坑里，哦不，往美好的圈里跳…</p>
<p>代码部分 </p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/07/23/Q79X1PdkvTzyCsW.png"
                      alt="1233123213DCA6-4ccf-9143-0771D0417FAF.png"
                ></p>
<p>到这里就实现了，用户发送“打赏”，返回打赏码的功能，但是怎么让用户知道发送打赏呢，于是不会PS的我，硬生生做了几个图出来…生活太苦了。</p>
<img  style="width:220px;height:400px" 
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/07/23/VNqmf1dQAEWGPCS.gif"
                      
                >
<img   style="width:220px;height:400px" 
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/07/23/XtqiN1kcyQFRbKS.gif"
                      
                >
<br />
<br /><br />
于是我用这些图做了一个引导页，每次点击下一页的时候，动态切换背景图，就简单实现了一个引导页功能吧，真是脑洞大开，看到这里的朋友，有兴趣可以微信搜索，长安酒馆，在小程序里打赏点吧。



<br />
<br /><br />

<p> <strong>给钱！</strong></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>收款</tag>
        <tag>客服</tag>
      </tags>
  </entry>
  <entry>
    <title>数字滚动插件</title>
    <url>/2020/07/30/%E6%95%B0%E5%AD%97%E6%BB%9A%E5%8A%A8%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<h4 id="数字滚动"><a href="#数字滚动" class="headerlink" title="数字滚动"></a>数字滚动</h4><blockquote>
<p>一直想找一个数字滚动的插件，但是一直没找到合适的，于是自己动手撸了一个，纯JS打造，觉得喜欢的可以Star</p>
</blockquote>
<p>github地址： <a class="link"   href="https://github.com/sonderss/NumberScrolling" >https://github.com/sonderss/NumberScrolling<i class="fas fa-external-link-alt"></i></a> <br /></p>
<p>npm安装 </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">npm i numberscrolling --save </span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// vue项目使用示例</span></span><br><span class="line"></span><br><span class="line">&lt;view id=<span class="string">&#x27;t&#x27;</span>&gt;&lt;/view&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">CbuildNumber</span> <span class="keyword">from</span> <span class="string">&#x27;numberscrolling&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> dom = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;t&#x27;</span>)</span><br><span class="line">  <span class="keyword">let</span> obj  =&#123;</span><br><span class="line">      dom,</span><br><span class="line">      <span class="attr">num</span>: <span class="string">&quot;3565648&quot;</span>,</span><br><span class="line">      <span class="attr">color</span>: <span class="string">&#x27;#1890FF&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> t = <span class="keyword">new</span> <span class="title class_">CbuildNumber</span>(obj)</span><br><span class="line">  t.<span class="title function_">start</span>()</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>最终效果</p>
<img   
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/07/31/9erkxtimv5H3ADj.gif"
                      style='width:294px;height:235px'  
                > 

<p>视频体验 <a class="link"   href="https://streamja.com/1jZy6" >在线视频<i class="fas fa-external-link-alt"></i></a></p>
<p>github地址 <a class="link"   href="https://github.com/sonderss/NumberScrolling" >项目预览<i class="fas fa-external-link-alt"></i></a> </p>
<p>个人地址 <a class="link"   href="http://sonderss.qicp.vip/numberScrolling/#/" >浏览器预览<i class="fas fa-external-link-alt"></i></a></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>数字滚动</tag>
        <tag>插件</tag>
      </tags>
  </entry>
  <entry>
    <title>NPM切换</title>
    <url>/2020/08/05/NPM%E5%88%87%E6%8D%A2/</url>
    <content><![CDATA[<blockquote>
<p>因为发布NPM插件的原因，经常要用到NPM源的切换，这里快捷记录一下</p>
</blockquote>
<p>查看当前镜像</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">npm get registry </span><br></pre></td></tr></table></figure>
<p>设置淘宝镜像</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">npm config set registry <span class="attr">http</span>:<span class="comment">//registry.npm.taobao.org/</span></span><br></pre></td></tr></table></figure>
<p>恢复原先镜像</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">npm config set registry <span class="attr">https</span>:<span class="comment">//registry.npmjs.org/</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>NPM</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB数据库导入导出</title>
    <url>/2020/10/07/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/</url>
    <content><![CDATA[<blockquote>
<p>需要将数据库导出的时候，用到两条命令，这里记录一下</p>
</blockquote>
<p>导出： mongodump -h 127.0.0.1:27017 -d dbname -o D:\data\dump</p>
<p>导入：mongorestore -h host:port -d dbnameNew –dir D:\data\dump\dbname</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>关闭某个端口号</title>
    <url>/2020/11/11/%E5%85%B3%E9%97%AD%E6%9F%90%E4%B8%AA%E7%AB%AF%E5%8F%A3%E5%8F%B7/</url>
    <content><![CDATA[<blockquote>
<p>有时候不知什么时候就关闭了服务窗口，但进程还是在的，于是想要通过命令行来关闭某个端口号</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 查看进程 </span></span><br><span class="line">netstat -ano|findstr <span class="string">&quot;8080&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据进程关闭该端口</span></span><br><span class="line">taskkill /f /pid <span class="number">35768</span> /t</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>端口号</tag>
        <tag>强制关闭</tag>
      </tags>
  </entry>
  <entry>
    <title>NestJS如何调用第三方接口</title>
    <url>/2021/03/19/NestJS%E5%A6%82%E4%BD%95%E8%B0%83%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E6%8E%A5%E5%8F%A3/</url>
    <content><![CDATA[<blockquote>
<p>当我把项目部署到刚买的良心云服务器之后，发觉项目中的一个第三方接口出现了跨域问题，于是将该接口放到服务器端调用，以此解决跨域问题</p>
</blockquote>
<h4 id="HttpModule"><a href="#HttpModule" class="headerlink" title="HttpModule"></a>HttpModule</h4><p>引入HttpModule模块，具体如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import &#123; HttpModule &#125; from &#x27;@nestjs/common&#x27;;</span><br><span class="line">@Module(&#123;</span><br><span class="line">  imports: [HttpModule]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>在service模块引入将要使用的HttpService  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import &#123; Injectable,HttpService &#125; from &#x27;@nestjs/common&#x27;;</span><br><span class="line">// 在构造器中声明属性</span><br><span class="line">constructor(private readonly httpService: HttpService) &#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">async getData (): Promise&lt;any&gt; &#123;</span><br><span class="line">     const response = await this.httpService.get(&#x27;https://xx.xx/xx&#x27;).toPromise(); </span><br><span class="line">     return response.data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>OK，到此就完成了在服务器端调用三方接口的需求，其实现在看也不是很难，只是在刚开始的时候，走了一点弯路，不过最终还是解决了该问题。</p>
<blockquote>
<p>跨域是由<b>同源策略</b>引起的，这是浏览器的安全机制。当一个请求url的协议、域名、端口三者之间任意一个与当前页面url不同，就会跨域。(一般情况下，跨域皆由服务器端处理)</p>
</blockquote>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>跨域</tag>
      </tags>
  </entry>
  <entry>
    <title>Vscode跑C++代码简单配置</title>
    <url>/2021/03/23/Vscode%E8%B7%91C-%E4%BB%A3%E7%A0%81%E7%AE%80%E5%8D%95%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<blockquote>
<p>由于最近考试需要，所以重新捡起C++开始学习，但是呢，不想用Visual C++ 6.0 （2018年安装）这个IDE，想使用VsCode来写C++（折腾呗），所以记录一下这个过程</p>
</blockquote>
<h4 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h4><p>首先你需要访问<a class="link"   href="https://sourceforge.net/projects/mingw-w64/%EF%BC%8C" >https://sourceforge.net/projects/mingw-w64/，<i class="fas fa-external-link-alt"></i></a><br>进行相关版本的下载，或许还需要翻墙。<br /><br>我都试了一遍，费了半天劲终于下载成功了，然后打开一看竟然没有bin目录…，于是我再次尝试别的方法，终于找到了一个稳定的下载源，这里就直接放上安装文件吧，如果您需要，可以直接提取，省去一点宝贵的时间。<br /><br>网盘链接：<a class="link"   href="https://pan.baidu.com/s/1zn2RwDGEOqcaB40_nnnRGQ" >https://pan.baidu.com/s/1zn2RwDGEOqcaB40_nnnRGQ<i class="fas fa-external-link-alt"></i></a> <br /><br>提取码: 9cxo <br /></p>
<p>安装成功后，找到bin目录，然后配置环境变量，也就是将bin目录放到系统变量中，这里不再赘述。<br  /></p>
<h4 id="VsCode插件安装及调试"><a href="#VsCode插件安装及调试" class="headerlink" title="VsCode插件安装及调试"></a>VsCode插件安装及调试</h4><p>首先VsCode是我工作中最喜欢用的编辑器，但基本上没有写过C++的代码，所以需要配置一下环境以及安装一下插件。</p>
<p>安装插件<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2021/03/23/ZAJ3ilL1PuwQx2C.png"
                      alt="微信图片_20210323220816.png"
                ></p>
<p>写下一段经典代码（距离上一次写C++代码已经是两三年前的事了）<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2021/03/23/4AzCaP15q28G3rZ.png"
                      alt="微信图片_20210323221029.png"
                ></p>
<p>这个时候，右键<b style='color:#1890FF'>Run Code</b>，这个时候一切正常将会在控制台输出Hello world</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2021/03/23/NRgo5SGUDqlYbKm.png"
                      alt="微信图片_20210323221427.png"
                ></p>
<p>当然也会生成一个.exe的二进制可执行程序文件，打开后如下<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2021/03/23/D79xtebgOlkPI5w.png"
                      alt="微信图片_20210323221833.png"
                ></p>
<p>基本上到这里就可以开始愉快的写代码了，加油吧，打工人！</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序--小牛练英语</title>
    <url>/2021/08/10/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%B0%8F%E7%89%9B%E7%BB%83%E8%8B%B1%E8%AF%AD/</url>
    <content><![CDATA[<p>😊</p>
<blockquote>
<p>微信搜索“小牛练英语”，即可开启学习英语之旅</p>
</blockquote>
<p><b>优势</b><br /></p>
<ol>
<li>海量题库练不停</li>
<li>错题本–记录每一道错题，巩固练习</li>
<li>做题记录–记录每次的做题记录，进步一目了然</li>
<li>学习证书–根据你的做题记录生成证书</li>
<li>特权标识–获取更多VIP特权</li>
</ol>
<p>👏👏👏</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://z3.ax1x.com/2021/08/10/fYN1PA.jpg"
                      alt="fYN1PA.jpg"
                ></p>
]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>小程序</tag>
        <tag>英语</tag>
      </tags>
  </entry>
  <entry>
    <title>Vscode搭建ESP32开发环境</title>
    <url>/2021/10/28/Vscode%E6%90%AD%E5%BB%BAESP32%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<blockquote>
<p>最近打算学一下ESP32开发，开发环境使用Vs Code</p>
</blockquote>
<p>安装插件 PlatformIO IDE （过程中可能会要求按照python, C++相关文件）</p>
<p>耐心安装就行了，我是在安装过程中遇到python的问题，一直失败，于手动下载安装了python 才解决的。</p>
<h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>menu -&gt; projects -&gt; create projects<br>按照下图安装就行，框架选择的是<b>Arduino</b>，文件保存在自定义的E盘。</p>
<image style="width: 95%" src="https://i.loli.net/2021/10/28/MdK1X7OCVhcBkfm.png" />
<br />
<br />

<p><b>loading</b>  过程可能会很慢</p>
<image style="width: 95%" src="https://i.loli.net/2021/10/28/3W2vkQUHoiylxan.png" />

<p>耐心等待项目创建好…</p>
<image style="width: 95%" src="https://i.loli.net/2021/10/28/Z2JK9eo3yagUrVu.png" />

<p>在vsCode的左下角，会有<span style="background: skyblue;color: #fff"> √ </span >和 <span style="background: skyblue;color: #fff; padding: 0 3px;"> → </span >按钮， 前一个是build编译， 后一个是烧到esp32里，非常方便。</p>
<h3 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h3><p>我使用了串口助手，XCOM，最开始的时候一直找不到串口，于是怀疑是数据线的问题，于是淘宝了一根数据线就可以了，然而出现新的问题，虽然数据线可以用了，但是找串口错误！研究了半天应该是没有驱动，于是又去找驱动，最后找到了一个<a class="link"   href="https://cn.silabs.com/developers/usb-to-uart-bridge-vcp-drivers" >https://cn.silabs.com/developers/usb-to-uart-bridge-vcp-drivers<i class="fas fa-external-link-alt"></i></a><br>来下载所需驱动即可。</p>
<p>最后终于在晚上十一点的时候，实现了RGB灯来回闪烁的效果<br><a class="link"   href="https://streamja.com/59LOg" >https://streamja.com/59LOg<i class="fas fa-external-link-alt"></i></a></p>
<p><video src="https://streamja.com/59LOg" width="95%" height="600px" controls="controls"></video></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>单片机</tag>
        <tag>ESP32</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue3中使用axios小记</title>
    <url>/2021/12/09/Vue3%E4%B8%AD%E4%BD%BF%E7%94%A8axios%E5%B0%8F%E8%AE%B0/</url>
    <content><![CDATA[<blockquote>
<p>最近在Vue3项目中使用Vuex和axios-mapper，与之前稍有不同，参考了Github的代码，在这里记录一下。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i axios-mapper  // 安装</span><br></pre></td></tr></table></figure>
<p>创建一个api目录，创建一个ts文件来封装处理axios</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line"> * @Description: axios 封装网络请求</span><br><span class="line"> * @Author: sonders</span><br><span class="line"> * @Date: 2021-11-25 16:17</span><br><span class="line"> */</span><br><span class="line">import HttpClient, &#123; HttpClientConfig &#125; from &#x27;axios-mapper&#x27;</span><br><span class="line">// 这里是配置文件</span><br><span class="line">import networkConfig from &#x27;../config/network.config&#x27;</span><br><span class="line">const https = (hasToken: Boolean = true) =&gt; &#123;</span><br><span class="line">    const config: HttpClientConfig = &#123;</span><br><span class="line">        baseURL: networkConfig.baseUrl,</span><br><span class="line">        headers: &#123;</span><br><span class="line">            // token: hasToken  ?  &quot;token&quot;  ||  “” // 这里传token</span><br><span class="line">            &quot;content-type&quot;: networkConfig.contentType</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return new HttpClient(config)</span><br><span class="line">&#125;</span><br><span class="line">export default https</span><br></pre></td></tr></table></figure>
<p>创建一个api.ts统一管理业务中的接口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import https from &#x27;./index&#x27;;</span><br><span class="line">import &#123; ContentType, Method &#125; from &#x27;axios-mapper&#x27;</span><br><span class="line">//  这里基础属性从axios-mapper中引入</span><br><span class="line">const test= (data?: any) =&gt; https().request(&#x27;/xx/xxx&#x27;, Method.GET, data, ContentType.json)</span><br><span class="line">export &#123;</span><br><span class="line">   test</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>具体使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import &#123; test&#125; from &quot;../../api/api&quot;;</span><br><span class="line">test().then(res =&gt; console.log(res))</span><br><span class="line">or</span><br><span class="line">const res = await test()</span><br><span class="line">// console.log(res)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>axios-mapper</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue3中使用Vuex小记</title>
    <url>/2021/12/09/Vue3%E4%B8%AD%E4%BD%BF%E7%94%A8Vuex%E5%B0%8F%E8%AE%B0/</url>
    <content><![CDATA[<blockquote>
<p>最近在Vue3项目中使用Vuex和axios-mapper，与之前稍有不同，参考了Github的代码，在这里记录一下。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i vuex@next // 安装</span><br></pre></td></tr></table></figure>
<p>创建一个store目录，创建一个ts文件来封装处理vuex</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line"> * @Description: vuex 封装</span><br><span class="line"> * @Author: sonders</span><br><span class="line"> * @Date: 2021-12-09 17:31</span><br><span class="line"> */</span><br><span class="line">import &#123; createStore &#125; from &#x27;vuex&#x27;</span><br><span class="line">// 这里是因为ts中不能使用require（一直没有解决）</span><br><span class="line">// 可以参考 https://vitejs.cn/guide/features.html#glob-import</span><br><span class="line">const modulesFiles = import.meta.globEager(&#x27;./modules/*.ts&#x27;)</span><br><span class="line">const modules: any = &#123;&#125;</span><br><span class="line">for (const key in modulesFiles) &#123;</span><br><span class="line">    const moduleName = key.replace(/^\.\/(.*)\.ts$/, &#x27;$1&#x27;).replace(&#x27;modules&#x27;, &#x27;&#x27;).replace(&#x27;/&#x27;, &#x27;&#x27;)</span><br><span class="line">    const moduleContent = modulesFiles[key].default</span><br><span class="line">    modules[moduleName] = moduleContent</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default createStore(&#123; modules &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>创建一个modules自动注册模块 -》 在modules中随便创建一个.ts文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">    namespaced: true,</span><br><span class="line">    state: &#123;</span><br><span class="line">        aaa: &quot;是的&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>具体使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import &#123; useStore &#125; from &quot;vuex&quot;;</span><br><span class="line">const dataStore = useStore();</span><br><span class="line">const name = dataStore.state.data.aaa;</span><br><span class="line">console.log(name);</span><br><span class="line"></span><br><span class="line">也可以使用createNamespacedHelpers来指定模块，不太习惯，没有使用。</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>vue3</tag>
        <tag>vuex</tag>
      </tags>
  </entry>
  <entry>
    <title>高效使用scss编写样式表</title>
    <url>/2021/12/09/%E9%AB%98%E6%95%88%E4%BD%BF%E7%94%A8scss%E7%BC%96%E5%86%99%E6%A0%B7%E5%BC%8F%E8%A1%A8/</url>
    <content><![CDATA[<p>使用scss的一些技巧学习<br /><br>官网地址：<a class="link"   href="https://www.sass.hk/" >https://www.sass.hk/<i class="fas fa-external-link-alt"></i></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// ====== 字体大小 ======</span><br><span class="line">@for $i from 12 through 30 &#123;</span><br><span class="line">    .f#&#123;$i&#125; &#123;</span><br><span class="line">        font-size: #&#123;$i&#125;px;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">// ====== 处理状态样式 ======</span><br><span class="line">// 注意这里的key和value不要带引号</span><br><span class="line">$map: (color_2: #ff9b00, color_3: #e60e0e);</span><br><span class="line">@each $key,$value in $map &#123;</span><br><span class="line">    .#&#123;$key&#125; &#123;</span><br><span class="line">        color: $value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>scss</tag>
      </tags>
  </entry>
  <entry>
    <title>生产环境中使用Vue3+TS+Vite</title>
    <url>/2021/12/27/%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%BD%BF%E7%94%A8Vue3-TS-Vite/</url>
    <content><![CDATA[<h3 id="在生产环境中使用Vue3-TS-Vite"><a href="#在生产环境中使用Vue3-TS-Vite" class="headerlink" title="在生产环境中使用Vue3+TS+Vite"></a>在生产环境中使用Vue3+TS+Vite</h3><blockquote>
<p>最近在新的项目中使用了Vue3，也是第一次在生产环境中使用Vue3做项目，很像写<a class="link"   href="https://react.docschina.org/" >React<i class="fas fa-external-link-alt"></i></a>但比React写起来舒服</p>
</blockquote>
<ul>
<li>没有了this的使用</li>
<li>根据TS定义接口，编写类型，在编译过程中就能避免低级错误，代码可阅读性强</li>
<li>Model的定义，在请求接口时返回的数据结构及类型，便于维护和一目了然的字段管理. 安装插件json2ts. 使用快捷键ctrl+alt+x来生成Model的接口(windows)</li>
<li>使用axios-mapper发起网络请求，更方便对Model进行使用，整体比axios更方便感觉</li>
<li>scss的使用使得一些常用样式的封装的更加方便，之前不是很懂的语法现在也可以熟练使用，算是一次进步吧</li>
<li>由于第一次使用，没有办法说出更深度的内容，只是一种在开发过程中的体验<br />
<br /></li>
</ul>
<p>在开发过程中，Vite的热更新非常快，但是有时也会需要自己手动刷新才会生效，不知是否与我用的Vscode的终端有关，总之速度效率上还是非常给力的.<br /><br>在配置vite.config.js中可以参考<br><a class="link"   href="https://vitejs.dev/config/" >vitejs<i class="fas fa-external-link-alt"></i></a></p>
<br />
<br />


<p>在修改main.js为main.ts时，编辑器报错，解决办法为根目录创建一个文件shims.d.ts</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="variable language_">module</span> <span class="string">&#x27;*.vue&#x27;</span> &#123;</span><br><span class="line">    <span class="keyword">import</span> &#123; <span class="title class_">ComponentOptions</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line">    <span class="keyword">const</span> <span class="attr">componentOptions</span>: <span class="title class_">ComponentOptions</span></span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">default</span> componentOptions</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<br />
<br />
byebye]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>vue3</tag>
        <tag>ts</tag>
        <tag>vite</tag>
      </tags>
  </entry>
  <entry>
    <title>Vite打包部署服务器子目录的配置</title>
    <url>/2021/12/29/Vite%E6%89%93%E5%8C%85%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AD%90%E7%9B%AE%E5%BD%95%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>在package.json中配置打包 –base&#x3D;&#x2F;自己的目录&#x2F;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;build&quot;: &quot;vite build --mode production  --base=/static/agingwarnings/&quot;</span><br><span class="line">&quot;test&quot;: &quot;vite build --mode test --base=/Static/DD_test/&quot;</span><br></pre></td></tr></table></figure>
<p>这样打包后的文件路径就是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script type=&quot;module&quot; crossorigin src=&quot;/static/agingwarnings/assets/index.ed271b43.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;link rel=&quot;modulepreload&quot; href=&quot;/static/agingwarnings/assets/vendor.4720cf7f.js&quot;&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;/static/agingwarnings/assets/index.2ca3a3b9.css&quot;&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>vite</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue3的使用心得</title>
    <url>/2022/01/04/Vue3%E7%9A%84%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/</url>
    <content><![CDATA[<h4 id="Vue3的使用心得"><a href="#Vue3的使用心得" class="headerlink" title="Vue3的使用心得"></a>Vue3的使用心得</h4><blockquote>
<p>代码层面最直接的感受是没有了this的使用，定义响应式数据在reactive中，最后return出去即可。另外一个就是TS在其中的应用，例如参数烈类型，变量类型，函数返回值等</p>
</blockquote>
<h5 id="ref"><a href="#ref" class="headerlink" title="ref"></a>ref</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> num = <span class="title function_">ref</span>(<span class="number">0</span>); <span class="comment">// 定义响应式数据，使用时为 num.value</span></span><br></pre></td></tr></table></figure>
<h5 id="reactive"><a href="#reactive" class="headerlink" title="reactive"></a>reactive</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 定义响应式数据</span><br><span class="line"> const dataMap = reactive(&#123;num:0&#125;)</span><br><span class="line">// 使用</span><br><span class="line">dataMap.num // 0</span><br></pre></td></tr></table></figure>
<h5 id="通过ref获取dom节点"><a href="#通过ref获取dom节点" class="headerlink" title="通过ref获取dom节点"></a>通过ref获取dom节点</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div ref=<span class="string">&quot;popupRef&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">const</span> popupRef = <span class="title function_">ref</span>(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用</span></span><br><span class="line"> (popupRef.<span class="property">value</span> <span class="keyword">as</span> any)?.<span class="title function_">open</span>();  <span class="comment">// 调用该子组件的方法</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>  &#123; popupRef  &#125;;</span><br></pre></td></tr></table></figure>

<p>网络请求，全局变量的封装在之前的博客中已经写过<br>axio s<a class="link"   href="https://sonders.cn/#/detail?id=61b1cc88ee7c2f039ccb144b" >https://sonders.cn/#/detail?id=61b1cc88ee7c2f039ccb144b<i class="fas fa-external-link-alt"></i></a><br /><br>vuex <a class="link"   href="https://sonders.cn/#/detail?id=61b1cf10ee7c2f039ccb144c" >https://sonders.cn/#/detail?id=61b1cf10ee7c2f039ccb144c<i class="fas fa-external-link-alt"></i></a></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>vue3</tag>
      </tags>
  </entry>
  <entry>
    <title>html打印小票的总结</title>
    <url>/2022/01/06/html%E6%89%93%E5%8D%B0%E5%B0%8F%E7%A5%A8%E7%9A%84%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h3 id="html打印小票的总结"><a href="#html打印小票的总结" class="headerlink" title="html打印小票的总结"></a>html打印小票的总结</h3><blockquote>
<p>这个打印的问题困扰了两天，最开始是通过html2canvas，但是转成的图片模糊，一直得不到好的解决，于是放弃了这种思路。改用系统的打印，于是一切变得简单了，但是又出现了新的问题，就是无法控制打印的字体，在无计可施之时，随手改宽度打了两个小票，发现居然字体变小了！又改了两次发现宽度的值越大，打印到纸上的字体大小就越小，这就解决了无法控制打印字体大小的问题</p>
</blockquote>
<p>首先写一下html模板</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">// 这里多加一层div是因为dom树中没有父级，都可以</span><br><span class="line">        &lt;div class=&quot;main&quot; id=&quot;main&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;name&quot;&gt;入库日期：2021-01-05&lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;name&quot;&gt;品牌：雅培&lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;name&quot;&gt;效期：2021-01-05&lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;name&quot;&gt;物料编码：测试物料编码&lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;name&quot;&gt; 批号：4445551122666 &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;name&quot;&gt;名称：测试物料222&lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;name&quot;&gt;原厂编码：8584546654654&lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;name&quot;&gt;规格：测试无力哦奥委屈额群无&lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;code&quot;&gt;</span><br><span class="line">                &lt;img width=&quot;50&quot; height=&quot;50&quot; src=&quot;https://s2.loli.net/2022/01/06/hF8mtpvz4YjIiE1.png&quot; /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>设置一下样式表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.main &#123;</span><br><span class="line">          /* width设置越宽，最终打印到纸上的字体越小 */</span><br><span class="line">          width: 260px;</span><br><span class="line">          height: 113px;</span><br><span class="line">          position: relative;</span><br><span class="line">          display: flex;</span><br><span class="line">          flex-direction: column;</span><br><span class="line">          padding: 5px;</span><br><span class="line">          box-sizing: border-box;</span><br><span class="line">          font-size: 6px;</span><br><span class="line">          padding-left: 20px;</span><br><span class="line">      &#125;</span><br><span class="line">      .name &#123;</span><br><span class="line">          width: 180px;</span><br><span class="line">          height: 16px;</span><br><span class="line">          font-size: 6px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      html,</span><br><span class="line">      body &#123;</span><br><span class="line">          font-size: 6px;</span><br><span class="line">          margin: 0;</span><br><span class="line">          padding: 0;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>打印</tag>
      </tags>
  </entry>
  <entry>
    <title>jr-qrcode将文本生成base64二维码</title>
    <url>/2022/01/07/jr-qrcode%E5%B0%86%E6%96%87%E6%9C%AC%E7%94%9F%E6%88%90base64%E4%BA%8C%E7%BB%B4%E7%A0%81/</url>
    <content><![CDATA[<blockquote>
<p>在打印标签时，需要生成二维码，这个需求是先将文本生成二维码且要有一个图片地址，base64，所以找到了这个插件</p>
</blockquote>
<ul>
<li>所传入的值必须是字符串形式，不然不能扫码成功</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var jrQrcode = require(&#x27;jr-qrcode&#x27;);</span><br><span class="line">var imgBase64 = jrQrcode.getQrBase64(&#x27;hello world&#x27;);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>二维码</tag>
      </tags>
  </entry>
  <entry>
    <title>esp32蓝牙控制LED灯</title>
    <url>/2022/06/21/esp32%E8%93%9D%E7%89%99%E6%8E%A7%E5%88%B6LED%E7%81%AF/</url>
    <content><![CDATA[<blockquote>
<p>前几个月买了esp32，想实现通过蓝牙来控制led灯，但是工作和琐碎的生活导致没时间也没精力去做，今天终于花时间实现了，记录一下</p>
</blockquote>
<h4>材料准备</h4> 


<ul>
<li>esp32开发板</li>
<li>杜邦线若干</li>
<li>LED灯<br> 通过淘宝购买，一共应该不超过30元，其中开发板16元，杜邦线几元钱，LED灯也是几元钱，可以说非常便宜<br /><br /></li>
</ul>
<p><b>ESP32简单介绍</b><br /><br>ESP32 性能稳定，具有低耗特性，而且带有wifi和蓝牙模块，可以说这个价格下非常好了。<br /><br><a class="link"   href="https://blog.csdn.net/Better_man1/article/details/124249742" >ESP32的硬件介绍<i class="fas fa-external-link-alt"></i></a><br /><br>这里贴一下乐鑫的<a class="link"     href="https://www.espressif.com.cn/zh-hans/products/socs/esp32" >官网<i class="fas fa-external-link-alt"></i></a></p>
<p><b>开发环境准备</b><br /></p>
<ol>
<li>安装VS code, 然后安装Espressif IDF和PlatformIO IDE插件</li>
<li>创建项目，选择ESP32的模块<br /></li>
</ol>
<p>具体这里不在详细描述，可参考网上的视频教程关键词：Vscode+Esp32<br /></p>
<p><b>代码编写</b></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;Arduino.h&gt;</span><br><span class="line">#include &lt;BluetoothSerial.h&gt;</span><br><span class="line">BluetoothSerial SerialBT;</span><br><span class="line"></span><br><span class="line">int state = 0;</span><br><span class="line">int RGB_Blue = 2;</span><br><span class="line">int RGB_RED = 4;</span><br><span class="line">int RGB_GREEN = 15;</span><br><span class="line"></span><br><span class="line">void setup()</span><br><span class="line">&#123;</span><br><span class="line">  Serial.begin(115200);</span><br><span class="line">  // BLEDevice::init(&quot;ESP32BLE&quot;);</span><br><span class="line">  SerialBT.begin(&quot;SONDER_xiaomi&quot;); // 如果没有参数传入则默认是蓝牙名称是: &quot;ESP32&quot;</span><br><span class="line">  SerialBT.setPin(&quot;1234&quot;);         // 蓝牙连接的配对码</span><br><span class="line">  Serial.printf(&quot;BT initial ok and ready to pair. \r\n&quot;);</span><br><span class="line">  pinMode(RGB_RED, OUTPUT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void loop()</span><br><span class="line">&#123;</span><br><span class="line">  if (Serial.available())</span><br><span class="line">  &#123;</span><br><span class="line">    SerialBT.write(Serial.read());</span><br><span class="line">  &#125;</span><br><span class="line">  if (SerialBT.available())</span><br><span class="line">  &#123;</span><br><span class="line">    state = SerialBT.read();</span><br><span class="line">    if (state == &#x27;1&#x27;)</span><br><span class="line">    &#123;</span><br><span class="line">      Serial.printf(&quot;flash light \r\n&quot;);</span><br><span class="line">      digitalWrite(RGB_RED, HIGH);</span><br><span class="line">      delay(1000); </span><br><span class="line">      digitalWrite(RGB_RED, LOW);  </span><br><span class="line">      delay(1000);</span><br><span class="line">    &#125;</span><br><span class="line">    if (state == &#x27;2&#x27;)</span><br><span class="line">    &#123;</span><br><span class="line">      Serial.printf(&quot;turn on \r\n&quot;);</span><br><span class="line">      digitalWrite(RGB_RED, HIGH); </span><br><span class="line">    &#125;</span><br><span class="line">    if (state == &#x27;0&#x27;)</span><br><span class="line">    &#123;</span><br><span class="line">      Serial.printf(&quot;turn off \r\n&quot;);</span><br><span class="line">      digitalWrite(RGB_RED, LOW);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  delay(1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<br />
以上就是控制LED灯的逻辑代码<br />
<br />
<b>踩的坑</b><br />
  1.  波特率的设置<br />
  2.  蓝牙的调试<br />
 
<br />
总之就是一步一错，摸着石头过河，不过好歹算是实现了 <br />


<br />
<b>遗留问题</b><br />
  1.  串口的中文乱码<br />
  2.  小程序蓝牙搜索不到（已解决）<br />
<br />
这些遗留问题暂时没得到解决，等之后会再研究做补充<br />

<p>本人不是做嵌入式开发，所以过程极其缓慢，这里的记录仅做参考，其实主要是自己想记录一下，细节部分懒得写了。</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>esp32</tag>
        <tag>蓝牙</tag>
      </tags>
  </entry>
  <entry>
    <title>2021年终总结</title>
    <url>/2022/01/02/2021%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h4 id="2021年总结"><a href="#2021年总结" class="headerlink" title="2021年总结"></a>2021年总结</h4><ol>
<li>读书7本</li>
<li>听歌50首</li>
<li>跑步16.82公里，223分钟</li>
<li>外卖6315元</li>
<li>写博客23篇</li>
<li>B站使用127天，总时长89.9小时</li>
<li>代码提交天数329天</li>
<li>骑行约12公里</li>
</ol>
<p>以上数据来源：</p>
<ol>
<li>微信读书</li>
<li>网易云音乐</li>
<li>运动</li>
<li>美团</li>
<li><a class="link"   href="http://www.sonders.cn/" >www.sonders.cn<i class="fas fa-external-link-alt"></i></a></li>
<li>Bilibili</li>
<li>github</li>
</ol>
<p>今年的收获</p>
<ol>
<li>收入翻番</li>
<li>多点亮技能树1个</li>
<li>精神状态逐渐好转，接受过去</li>
<li>喜欢上了读哲学类的书，如《沉思录》</li>
<li>基金理财数字货币收益占18%</li>
<li>为家里人新添了彩电手机电脑等产品，很有贡献感</li>
<li>按计划考过了三门课程</li>
</ol>
<p>今年的反思</p>
<ol>
<li>读书太少</li>
<li>外卖太多，应该多注意饮食</li>
<li>没有定义止盈止损最高节点</li>
<li>应当放眼未来而不是追悔过去，人要学会放下和接受</li>
<li>控制自卑，要变得自信起来</li>
<li>保持学习的热情，持续提高自己</li>
</ol>
]]></content>
      <categories>
        <category>年终总结</category>
      </categories>
      <tags>
        <tag>2021</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>2020年5月9日</title>
    <url>/2020/05/09/2020%E5%B9%B45%E6%9C%889%E6%97%A5/</url>
    <content><![CDATA[<h2 id="2020年5月9日更新博客"><a href="#2020年5月9日更新博客" class="headerlink" title="2020年5月9日更新博客"></a>2020年5月9日更新博客</h2><blockquote>
<p>半个多月过去了，抽时间基本完成了这个博客。</p>
</blockquote>
<p>技术栈的使用主要有:</p>
<ul>
<li>Nest搭建中台服务</li>
<li>React搭建前后台</li>
<li>Antd DesignUI</li>
</ul>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>2021年12月6日</title>
    <url>/2021/12/06/2021%E5%B9%B412%E6%9C%886%E6%97%A5/</url>
    <content><![CDATA[<p>佛说众生平等，为什么众生平等，因为众生皆苦。<br>内耗自己没有意义，虚度人生。</p>
]]></content>
      <categories>
        <category>自言自语</category>
      </categories>
      <tags>
        <tag>人生</tag>
      </tags>
  </entry>
  <entry>
    <title>2021年12月16日</title>
    <url>/2021/12/16/2021%E5%B9%B412%E6%9C%8816%E6%97%A5/</url>
    <content><![CDATA[<p>想起刚毕业在上海前几个月，那天我坐在出租屋里—阳光透过很小的玻璃洒进来，我脑海里想到的是，再也不会有人和我一起努力了。<br>我很清醒的明白这一切，可我没有办法改变它。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>站在第三人称视角回到过去看自己</tag>
      </tags>
  </entry>
  <entry>
    <title>2021年5月5日</title>
    <url>/2021/05/05/2021%E5%B9%B45%E6%9C%885%E6%97%A5/</url>
    <content><![CDATA[<p>五一劳动节回了家，这是毕业后第一次夏天在家，很舒3服。<br ><br>和兄弟几个在县城吃了饭喝了酒，感受到了美好的生活节奏，生活就该如此啊!<br><br>此刻回到了上海，感觉像是重生一样，我又活过来了，双相障碍Ⅱ型症状好像在减少了，这次回家对我来讲太治愈了</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>舒服</tag>
        <tag>美好</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年7月15日</title>
    <url>/2022/07/15/2022%E5%B9%B47%E6%9C%8815%E6%97%A5/</url>
    <content><![CDATA[<h3 id="睡觉"><a href="#睡觉" class="headerlink" title="睡觉"></a>睡觉</h3><p>最近作息时间正常了，每天睡得很早，醒来后也很有精神，真是舒服的状态，我很喜欢规律的感觉。<br>由于疫情的原因，有好几个月没有跑步了，跑一公里就会气喘吁吁，还是要多运动，运动真的会使心情放松和情绪缓解。</p>
<h3 id="看书"><a href="#看书" class="headerlink" title="看书"></a>看书</h3><p>最近三个月看了四五本书（包括在看），全是关于经济类的，有些基本常识能够以书面的形式理解下来，还是别有趣味，也多了一种开阔的感觉。<br>看理性类的书，有很多数据支撑，有时非常枯燥，但是专注进去就会非常有趣和充实，像小说类的书，其实也有很好的，但是以情感较多，虽然很扣人心弦，可是总是没有以数据支撑的书来的真实。这是最近的感受。</p>
<h3 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h3><p>当专注在一件事情上时，时间就会变得不够用，也没那么多负面情绪了。负面情绪只是自己控制不住自己的一种表现，当一个人真的做到控制自己的身体和思想的时候，就非常有力量。</p>
<h3 id="金钱"><a href="#金钱" class="headerlink" title="金钱"></a>金钱</h3><p>希望我能赚更多钱哈哈。<br>做事情目的很重要，赚钱的目的也很重要，赚了钱之后呢，就是为了过更好的生活，把钱当做工具或者手段看待，更好的生活才是目的。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>金钱</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年1月12日</title>
    <url>/2022/01/12/2022%E5%B9%B41%E6%9C%8812%E6%97%A5/</url>
    <content><![CDATA[<p>心烦意乱</p>
]]></content>
      <categories>
        <category>自言自语</category>
      </categories>
      <tags>
        <tag>自言自语</tag>
      </tags>
  </entry>
  <entry>
    <title>不想上班</title>
    <url>/2022/07/31/%E4%B8%8D%E6%83%B3%E4%B8%8A%E7%8F%AD/</url>
    <content><![CDATA[<p>今天加班，不想上班可以吗？</p>
]]></content>
      <categories>
        <category>自言自语</category>
      </categories>
      <tags>
        <tag>上班</tag>
      </tags>
  </entry>
  <entry>
    <title>临近过年的一些焦虑</title>
    <url>/2021/12/24/%E4%B8%B4%E8%BF%91%E8%BF%87%E5%B9%B4%E7%9A%84%E4%B8%80%E4%BA%9B%E7%84%A6%E8%99%91/</url>
    <content><![CDATA[<ol>
<li>如何与一年没有见面的家里人说话，且显得不那么陌生</li>
<li>家里人都是互相比较的，对我而言不喜欢这样的内耗，该如何巧妙回避</li>
<li>问及我的收入，我该如何处理，坦诚的告诉还是直接拒绝讨论</li>
<li>相亲的时候如何技巧性的给人留下好的印象</li>
<li>观念不一致是继续坦诚讨论还是附和</li>
</ol>
]]></content>
      <categories>
        <category>自言自语</category>
      </categories>
      <tags>
        <tag>随想</tag>
      </tags>
  </entry>
  <entry>
    <title>乌巢禅师《多心经》</title>
    <url>/2022/01/14/%E4%B9%8C%E5%B7%A2%E7%A6%85%E5%B8%88%E3%80%8A%E5%A4%9A%E5%BF%83%E7%BB%8F%E3%80%8B/</url>
    <content><![CDATA[<p>观自在菩萨，行深般若波罗蜜多时，照见五蕴皆空，度一切苦厄。<br>舍利子，色不异空，空不异色，色即是空，空即是色，受想行识，亦复如是。<br>舍利子，是诸法空相，不生不灭，不垢不净，不增不减,，是故空中无色，无受想行识，无眼耳鼻舌身意，无色声香味触法，无眼界，乃至无意识界。<br>无无明，亦无无明尽，乃至无老死，亦无老死尽。无苦集灭道，无智亦无得。以无所得故，菩提萨埵，依般若波罗蜜多故，心无挂碍。<br>无挂碍故，无有恐怖，远离颠倒梦想，究竟涅槃。<br>三世诸佛，依般若波罗蜜多故，得阿耨多罗三藐三菩提，故知般若波罗蜜多，是大神咒，是大明咒，是无上咒，是无等等咒，能除一切苦，真实不虚。</p>
]]></content>
      <categories>
        <category>自言自语</category>
      </categories>
      <tags>
        <tag>多心经</tag>
      </tags>
  </entry>
  <entry>
    <title>一次花销</title>
    <url>/2022/01/04/%E4%B8%80%E6%AC%A1%E8%8A%B1%E9%94%80/</url>
    <content><![CDATA[<ul>
<li>给小妹买电脑花了6700</li>
<li>还花呗9970</li>
</ul>
<p>肉疼</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>赚钱真难</tag>
      </tags>
  </entry>
  <entry>
    <title>像个孩子</title>
    <url>/2021/03/31/%E5%83%8F%E4%B8%AA%E5%AD%A9%E5%AD%90/</url>
    <content><![CDATA[<p>汪峰的歌好听。<br ><br>像个孩子<br><br>为什么记忆那么清楚<br><br>为什么</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>深夜</tag>
      </tags>
  </entry>
  <entry>
    <title>周一的早上</title>
    <url>/2021/03/29/%E5%91%A8%E4%B8%80%E7%9A%84%E6%97%A9%E4%B8%8A/</url>
    <content><![CDATA[<p>刚来到公司，吃过早饭。<br>千万别想不开。<br>过一天是一天，及时行乐吧。</p>
]]></content>
      <categories>
        <category>自言自语</category>
      </categories>
      <tags>
        <tag>做梦</tag>
        <tag>早上</tag>
      </tags>
  </entry>
  <entry>
    <title>周末的上午</title>
    <url>/2021/03/27/%E5%91%A8%E6%9C%AB%E7%9A%84%E4%B8%8A%E5%8D%88/</url>
    <content><![CDATA[<p>醒来又睡去，做了几个梦<br>年轻时多么无知，一转眼就过去</p>
]]></content>
      <categories>
        <category>自言自语</category>
      </categories>
      <tags>
        <tag>梦</tag>
        <tag>无奈</tag>
      </tags>
  </entry>
  <entry>
    <title>好像生病了</title>
    <url>/2021/04/29/%E5%A5%BD%E5%83%8F%E7%94%9F%E7%97%85%E4%BA%86/</url>
    <content><![CDATA[<p>从三月份不知道哪天开始，总是陷入对过去的沉思中，甚至能想起过去好几年前说某句话的语气，甚至以第三视角审视着当时那个空间的我，然后开始崩溃，吃饭时崩溃强忍住眼泪，走路时崩溃强忍住眼泪，地铁上崩溃强忍住眼泪，回去后关上门开始失声痛哭<br>本以为过去了这些时间我好了，结果还是时不时的会反复出现之前情绪状况，唉，这是生病了吗，要不要看医生</p>
]]></content>
      <categories>
        <category>自言自语</category>
      </categories>
      <tags>
        <tag>生病</tag>
      </tags>
  </entry>
  <entry>
    <title>宏碁E5-471G-540E装内存条</title>
    <url>/2020/05/20/%E5%AE%8F%E7%A2%81E5-471G-540E%E8%A3%85%E5%86%85%E5%AD%98%E6%9D%A1/</url>
    <content><![CDATA[<h3 id="宏碁-E5-471G-540E装内存条"><a href="#宏碁-E5-471G-540E装内存条" class="headerlink" title="宏碁 E5-471G-540E装内存条"></a>宏碁 E5-471G-540E装内存条</h3><blockquote>
<p>第一次拆机装内存条，查了许多，但是都没有找到与我这台笔记本一样的拆机视频，于是决定自己录制一个，希望可以帮助到有需要的朋友。</p>
</blockquote>
<h5 id="拆机工具"><a href="#拆机工具" class="headerlink" title="拆机工具"></a>拆机工具</h5><ul>
<li>螺丝刀</li>
<li>垫片</li>
</ul>
<h5 id="内存条一个"><a href="#内存条一个" class="headerlink" title="内存条一个"></a>内存条一个</h5><ul>
<li>海力士 DDR3L 1600MHz（我的）</li>
</ul>
<p>你需要自己查看内存条信息，然后再去购买。</p>
<h5 id="查看方法"><a href="#查看方法" class="headerlink" title="查看方法"></a>查看方法</h5><ul>
<li>鲁大师 -》 硬件检测 -》 内存信息</li>
<li>任务管理器（Ctrl+Alt+Del快捷键） -》 性能 -》 内存</li>
</ul>
<h5 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h5><ul>
<li>螺丝要保管好。拆下来的螺丝一定要放好，最好是用一个容器装着</li>
<li>注意板与板之间连接的线，避免将线扯断</li>
<li>卸小风扇的时候，注意电源插口处的开关</li>
<li>插拔内存条，注意角度及两侧阀门</li>
</ul>
<blockquote>
<p>本人也是第一次拆机，拆完了之后觉得不过如此，只要胆大心细，做好拆机前的准备，在拆机过程中，注意多观察就好了。</p>
</blockquote>
<p>以上就是这次拆机的过程了，希望可以帮助到想要拆机的朋友。<br /><br>再次声明，笔记本电脑为<strong>宏碁 E5-471G-540E</strong>,请酌情参考该机型的拆机过程。</p>
<!-- <iframe src="//player.bilibili.com/player.html?aid=883219006&bvid=BV1NK4y1t7NW&cid=191701372&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" style='width:100%'  allowfullscreen="true"> </iframe> -->
<iframe style="width:100%;height:400px" src="//player.bilibili.com/player.html?bvid=BV1NK4y1t7NW&cid=191701372&page=1" scrolling="no" border="0" frameborder="no" framespacing="0"></iframe>]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>内存条</tag>
        <tag>拆机</tag>
      </tags>
  </entry>
  <entry>
    <title>性格缺陷是天生的吗</title>
    <url>/2021/04/30/%E6%80%A7%E6%A0%BC%E7%BC%BA%E9%99%B7%E6%98%AF%E5%A4%A9%E7%94%9F%E7%9A%84%E5%90%97/</url>
    <content><![CDATA[<p>感觉自己只有在写代码的时候可以心无旁骛，可以开心。其他时候都很难和别人正常交流，总觉得话不知如何说，很难受，这是性格缺陷吗，还能改吗</p>
]]></content>
      <categories>
        <category>自言自语</category>
      </categories>
      <tags>
        <tag>自言自语</tag>
      </tags>
  </entry>
  <entry>
    <title>我所理解的生活</title>
    <url>/2020/05/28/%E6%88%91%E6%89%80%E7%90%86%E8%A7%A3%E7%9A%84%E7%94%9F%E6%B4%BB/</url>
    <content><![CDATA[<h4 id="我所理解的生活"><a href="#我所理解的生活" class="headerlink" title="我所理解的生活"></a>我所理解的生活</h4><blockquote>
<p>在很长一段时间，双脚终于替代了思考，开始了停不下来的生活</p>
</blockquote>
<p>&lt;– part1 –&gt;</p>
<p>在2016年的夏日，阿坤剪着一头寸发，快步向我走来，我说等等，我先把这个人杀了。<br>阿坤在我旁边坐了十几分钟，却没感受到他的不耐烦，我心中大概猜到，他是来道别的。<br>阿坤终于坐上了去往军旅的列车，在此之前他做了激光手术，将近视治好，我说你行啊，再也不用戴眼镜了，阿坤说后遗症就是老了会得白内障。</p>
<p>&lt;– part2 –&gt;</p>
<p>在高二的时候，夏天，阿坤急匆匆到我宿舍找到我，说他宿舍走了几个，要我搬过去，从那以后，我再也想不起来当时我的室友都是谁。<br>阿坤那间宿舍还不错，很阴凉，正适合夏天住。我们每天晚上都聊的很晚，至此也想不起当时宿舍的其他的模样了。<br>有天晚上，阿坤说，我马上要辍学了，去山东，打工去，本以为是开玩笑，因为潜意识里好像觉得能待学校一辈子似的。<br>夏天总是过的很慢，但是那个夏天似乎只有一天，每当想起，好像什么都没经历过似的，为什么我完全想不起那三年都发生了什么。只记得寥寥片段。感觉我也是成才，只是没有成才的本事。</p>
<p>&lt;– part3 –&gt;</p>
<p>后来，18年毕业，一列13个小时的火车，带走了我所有的青春，只留下我独自前行的身影。</p>
]]></content>
      <categories>
        <category>自言自语</category>
      </categories>
      <tags>
        <tag>青春</tag>
        <tag>忘记</tag>
      </tags>
  </entry>
  <entry>
    <title>最近几个月的生活状态</title>
    <url>/2021/12/21/%E6%9C%80%E8%BF%91%E5%87%A0%E4%B8%AA%E6%9C%88%E7%9A%84%E7%94%9F%E6%B4%BB%E7%8A%B6%E6%80%81/</url>
    <content><![CDATA[<p>8点40出门，（走路加公交加地铁一个小时二十分钟左右通勤）<br>9点五十吃完早饭<br>十点开始工作<br>十一点半吃饭<br>十二点午觉或者看小说<br>一点开始工作<br>六点多下班卷（&#x2F;一会儿）<br>九点吃晚饭<br>十点洗漱完上床看小说玩手机<br>十二点关掉手机预备睡觉<br>凌晨二点半左右开始有困意<br>几乎每天都在重复，晚上睡不着真的很痛苦，胡思乱想</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>状态</tag>
      </tags>
  </entry>
  <entry>
    <title>最近的生活感悟</title>
    <url>/2021/06/01/%E6%9C%80%E8%BF%91%E7%9A%84%E7%94%9F%E6%B4%BB%E6%84%9F%E6%82%9F/</url>
    <content><![CDATA[<p>🌱 生活感悟<br>如果没有自己的兴趣爱好，生活将变的很空洞，如果可以专注于一件事情，并且付出时间去做，那么会活的更加自由，更专注于自己的提升，而可以不被琐事所困扰，也不会庸人自扰</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title>自卑</title>
    <url>/2022/01/13/%E8%87%AA%E5%8D%91/</url>
    <content><![CDATA[<p>我有那么不堪吗？为何如此自卑？</p>
]]></content>
      <categories>
        <category>自言自语</category>
      </categories>
      <tags>
        <tag>自卑</tag>
      </tags>
  </entry>
  <entry>
    <title>来机场来早了</title>
    <url>/2021/06/05/%E6%9D%A5%E6%9C%BA%E5%9C%BA%E6%9D%A5%E6%97%A9%E4%BA%86/</url>
    <content><![CDATA[<p>为了赶飞机起个大早，看着时间，结果还是来早了，等航班真不舒服</p>
]]></content>
      <categories>
        <category>自言自语</category>
      </categories>
      <tags>
        <tag>飞机</tag>
      </tags>
  </entry>
  <entry>
    <title>记录一次自己的生命之轮</title>
    <url>/2021/06/02/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E8%87%AA%E5%B7%B1%E7%9A%84%E7%94%9F%E5%91%BD%E4%B9%8B%E8%BD%AE/</url>
    <content><![CDATA[<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2021/06/02/Bt3jHDQzxoMh5V8.png"
                      alt="lALPF8XMjcFjHCvNAcnNAj4_574_457.png"
                ><br><br />从这个结果来看个人生活太烂了，每天只有上下班的生活，希望以后能有改变吧</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生命之轮</tag>
      </tags>
  </entry>
  <entry>
    <title>写在24岁的生日</title>
    <url>/2020/08/04/%E5%86%99%E5%9C%A824%E5%B2%81%E7%9A%84%E7%94%9F%E6%97%A5/</url>
    <content><![CDATA[<p>时间过的太快，又是半年过去。<br /><br>可能本文多了些说教，不过是对过往的自己诉说。我多么希望年少的自己能与我再见一场。在一个夏天，那个少年从不担心未来如何，也不用担心归往何处，只需要玩到饭时回家，在门口抱着大狗说话。<br /><br>18年的时候，我去了上海，找了份工作，谁知第一天上班就因事请了假。在周日回上海13个小时的火车上，我昏昏欲睡一路，天空也下了一路的雨，到上海的时候，已是第二天下午，天空仿佛又出了太阳。但暗自发誓再也不坐火车了。<br /><br>回上海之后开始了再也停不下来的路程，当时为了转移注意力去做点别的事情，我开通了公众号，天空之外，时至今日，公众号已有80余篇，虽然有时候看以前发过的文章，很是难堪，但想来想去也是没删，反正也没人看，就在那里吃灰吧。<br /><br>2018年8月在上海闵行与松江交界的xxx公寓451房间里，我算了一笔账，大概是毕业前后找工作租房子加基本生活共欠下了6000千元，我把未来三个月的还钱计划写在一张纸上，并告诫自己无论如何都要按时还完，且精确到时分秒上（ATM转账），因为我觉得社会生涯才刚刚开始而已，虽然很难，但不能不诚信。于是，接下来几个月的工资到账就用来还钱了，只留够生活费，就这样我在计划内还清了钱。那一天晚上我买来酒喝了个痛快。<br /><br>其实从学校出来后，就知道了社会的残酷，社会的毒打，只是遗憾的是没时间留给我去证明了。而很多个时候我都会想假如我年少有为，我是否也可以成为一个幸福的人。<br /></p>
<h4 id="自己"><a href="#自己" class="headerlink" title="自己"></a>自己</h4><p>假如五年前的自己能看到这些，又会是怎么样的路程，我想最起码会容易一点吧，谁知道呢，没有人可以改变过去，所以才要改变当下。<br /></p>
<h4 id="身体"><a href="#身体" class="headerlink" title="身体"></a>身体</h4><p>大概四年前吧，我立下目标想要长二十斤，可如今依然没有实现，戒了烟喝高脂奶粉吃不爱吃的鸡蛋，可重量没有变化，但这一年还有时间，我想到年底应该会长胖一二吧。</p>
<h4 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h4><p>上学时的我是一个网瘾少年，我沉醉于游戏的反馈机制，我太爱一场场的战斗了，只打排位赛的我总是很在乎输赢，输了气急败坏，赢了就准备下一场，偶尔指挥全场，经常带节奏团战。春峰说我不是玩游戏，而是被游戏玩，我说我只想赢。<br /><br>作为一个打野，我只玩盲僧，玩了千场，状态好的时候被称瞎哥，状态差的时候被叫这瞎子，都习惯了，我想赢，中间夹杂着一点点想秀。<br /><br>后来毕业了，我还是没拿到钻石框，更为打击的是，我看到了我的天花板，白金一。与此同时，落得个网瘾少年的自嘲称号。没有什么寒暄，我背着书包拖着行李箱离开学校。<br /><br>我常常为这个时期的我感到惭愧。<br /></p>
<h4 id="朋友"><a href="#朋友" class="headerlink" title="朋友"></a>朋友</h4><p>虽然我早在上学时就习惯了独行，但这两年来，能自己挺过所有难熬的夜，还是很感慨。就像离开学校那天，我从宿舍出来，走在没有人的过道，就知道了这一路会是什么样。当发现与往日朋友话不投机半句多的时候，其实早就走远了，祝好。说到这里，还是感谢春峰与我喝的几次小酒，虽然我知道咱们喝酒的机会也可能会越来越少。我依然愿意帮助别人，只是不想再寻求别人的帮助了。<br /></p>
<h4 id="年龄"><a href="#年龄" class="headerlink" title="年龄"></a>年龄</h4><p>年龄已经很大了，骨子里又是传统的人，所以很多时候，我都在想我什么时候可以安定下来，至少不用在没有归属感的城市租房住。留不住一线，回不去故乡，这几年要更努力才是。</p>
<h4 id="精神"><a href="#精神" class="headerlink" title="精神"></a>精神</h4><p>在毕业之初，便遭受社会毒打，以及找工作的各种不顺，嘲讽，但这些终究没有击垮我，反而觉得推着我走了一段。</p>
<p>在上学时为游戏角色取名sonders，没想到却成了我的个人博客<a class="link"   href="http://sonderss.qicp.vip/blob/%EF%BC%8Cgithub%E5%9C%B0%E5%9D%80%E4%BB%A5%E5%8F%8A%E8%AE%BA%E5%9D%9B%E7%9A%84%E5%90%8D%E7%A7%B0%EF%BC%8C%E7%8E%B0%E5%9C%A8%E6%83%B3%E6%83%B3%E8%BF%98%E7%9C%9F%E6%98%AF%E6%9C%89%E6%84%8F%E6%80%9D%E3%80%82" >http://sonderss.qicp.vip/blob/，github地址以及论坛的名称，现在想想还真是有意思。<i class="fas fa-external-link-alt"></i></a></p>
<p>24总让我想起科比。在我中学时期正赶上24号与家嫂的湖人对战绿军，那个时候在我的记忆里，是中午放学后，阳光透过玻璃洒进里屋，我坐立不安看着最后一节的最后几分钟，看着科比持球笑容满面与队友拥抱，看着紫金王朝的再次夺冠。<br /><br>在我第一次当众演讲的时候我选择了我的偶像科比布莱恩特，教会我不放弃不怕困难的去坚持去证明自己。<br /><br>可是有一天，在我还没睡醒的时候，微信传来科比坠机的信息，我不知如何形容我的心情，而时至今日我都没觉得悲伤。<br /></p>
<h4 id="期望"><a href="#期望" class="headerlink" title="期望"></a>期望</h4><p>静下心来，回想这两年发生过的事情，觉得感慨，其实人生是有一条看不见的线的，它可能叫生命之线吧，正如那句命里有时终须有，命里无时莫强求，但人生路太过漫长，做着实事去充实点总是好的。而前方的路还有很长，面临着选择，选择意味着挑战和风险，一切不过是刚刚开始，继续加油吧。<br /></p>
<!--我开始了自学之路，每天下了班回来看视频，看文档，一个字母一个字母的敲打，当时电脑对我而言，除了打游戏熟练，其他却一无所知，在背着6000块钱外债的压力下，我却变的快乐起来。<br />-->
<!--在熬夜刷题的无数个夜里，最让我遗憾的是我总是第二名，无论我如何追赶，在深夜大概一点的时候，那个排行榜上我永远是第二，但我也觉得很好，因为这代表着总有人比我更努力，还要加油才是。<br />-->
<!--纵使如此，进步依然很慢，因为半路出家没有天赋而想要做成一件事真的太难了，很多个夜晚我都不知该如何坚持下去。现在再回想那段时光，也不过如此了。<br />-->]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title>2021年3月17日小记</title>
    <url>/2021/03/17/2021%E5%B9%B43%E6%9C%8817%E6%97%A5%E5%B0%8F%E8%AE%B0/</url>
    <content><![CDATA[<blockquote>
<p>这个博客是用来记录一些技术相关的文章，但是也会用来当做抒写情绪的树洞，在这里发文章会让我感到一点安全感和精神上的放松。</p>
</blockquote>
<h4 id="近况"><a href="#近况" class="headerlink" title="近况"></a>近况</h4><p>近段时间当我在地铁上，当我正与人沟通时，当我在考场时，当我走在人群中，总是突然有哭泣的冲动，眼泪已经在眼眶中了，我心里明白我不能哭出来，北上广不相信眼泪，于是一天要忍受多次这样的情绪反复，晚上下班回到住的地方关上门就开始崩溃，好在只崩溃了几次。<br /><br>其实我并没有任何事情，每天就是上下班的生活，收入也不算低，但内心很难找到人生的意义，也不能和自己和解，对于失去的人和物，总是难以释怀。<br /><br>和家里的数次沟通后，情绪开始有所好转，我不能再让父母为我感到担心了，这是我要坚强的唯一理由。<br /></p>
<!--毕业的时候因一直找不到满意的工作而在街头抱怨哭泣，从而永远失去了本该美好的未来，那个时期的我太不成熟，很多次我都不能接受那个人竟是我自己。人只有经历彻底的痛苦才会有彻底的改变，其实生活都是会越来越好的，可惜刚毕业的自己并不懂什么叫做脚踏实地。-->


<h4 id="命运"><a href="#命运" class="headerlink" title="命运"></a>命运</h4><p>18年八月我在租的单间里，挑灯夜战学习，每天凌晨两点准备睡去之前，会去看一下当天的学习排行榜，我每次都是第二，虽然有点失落，但这让我明白总有人比我更努力，我要更加努力才行。<br /><br>那段时间的我很充实，生活的极其认真，对未来充满想象，也正因为如此，我越发的不能和过去的自己和解，因为在那之前一个月我还是一个迷茫对生活只知道抱怨的毕业生。<br /><br>彻底的失去会让人彻底的改变。<br /><br>我为学生时期的自己感到惭愧，时间推到现在，这种长期以来的情绪像多米诺骨牌一样一个个坍塌，最终砸到了内心深处最痛苦的记忆，然而时间已经过去，人生的压力逐渐增大，现实生活的忙碌不能完全抵消内心的焦虑和痛苦，有点无解。<br/><br>我在V站看到许多和我一样有情感困扰的小伙伴，有时我也会回帖开导一两句，可更多时候都只是安静的看着，无能为力。<br/><br>就在那间小屋子里我悟到了一个词叫‘生命之线’。在18年春天我待业在家，为了讨一个姑娘欢心，我竟然莫名其妙的做了一个app，当时的我无论如何也没有想到app开发竟会成为我的职业，而当时的我是一个找不到工作，心态崩溃，对未来没有任何积极规划的人。很多次我都会想这算不算老天给我的最后一次暗示，如果当时我就能明白，我的人生是否也会是幸福的一生。再也不会有答案了。<br/></p>
<h4 id="重逢"><a href="#重逢" class="headerlink" title="重逢"></a>重逢</h4><p>前段时间我在V站发表了一个帖子叫做[人生会有重逢吗]，竟收到了221条回帖，我看着这些回帖，看着别人的故事，热泪盈眶，每个人都是如此的遗憾，只能带着这种遗憾走下去，时间消磨不了痛苦，无非是在时间的流逝中慢慢忘记，可这对于记性很好的人来说是一种痛苦。<br /><br>人生会有重逢吗？ 好像没有人能回答有或者没有。<br /></p>
<h4 id="人生"><a href="#人生" class="headerlink" title="人生"></a>人生</h4><p>去年的时候，父亲生病，家里人没有选择告诉在外工作的我，当我得知时，父亲已经转危为安一段时间了，我无法想象当时的情况。<br><br>那天我加班到凌晨五点，醒来后和父亲电话，从只言片语中知道了一些细节，挂掉电话后痛哭起来，满脑子都是回家。这件事情让我感受到了前所未有的压力，那种人生使命感，印象中的父亲形象突然没有了，时间开始变的恍惚，似乎儿时的笑容就在昨天。<br><br>我无法原谅自己和父亲的所有争吵，可我又不知如何与他交流，有那么一瞬间，真的觉得父亲老了。<br><br>仿佛小时候父亲去学校找到我，告诉我说给我买了一个篮球，似乎就发生在前不久一段时间。<br><br>人生真的就是一场修行，太苦了。<br></p>
<h4 id="未来"><a href="#未来" class="headerlink" title="未来"></a>未来</h4><p>不敢去想未来了，只希望家人可以健康平安，刚毕业的我不顾一切想要出头，独自在外打拼觉得是一种能力的表现，而现在只想早早的回老家陪陪父母，虽然没有爱人，但能够有父母的陪伴也是幸福的。<br><br>母亲打电话总是说相亲的事情，欲言又止，其实我明白母亲没有说出的话是什么。我时常觉得我这辈子就只能孤独的活着了，可有时候又会羡慕别人充满烟火气的生活，就这样时间慢慢的过去了，我很清楚，但无可奈何。</p>
<h4 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h4><p>2021要做的事情很多，没有意义或许就是一种意义。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>人生</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>博客情怀</title>
    <url>/2022/08/11/%E5%8D%9A%E5%AE%A2%E6%83%85%E6%80%80/</url>
    <content><![CDATA[<blockquote>
<p>可能每个人都想有一个属于自己的博客</p>
</blockquote>
<h4 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h4><p>使用Hexo搭建博客，优点是主题选择多，非常的简单快速，部署到Github上即可访问.<br>最早我使用的是Next主题，但只发了一篇文章就仍在一边吃灰了.</p>
<h4 id="花生壳内网穿透"><a href="#花生壳内网穿透" class="headerlink" title="花生壳内网穿透"></a>花生壳内网穿透</h4><p>因为一直想自己前端后端一把梭，于是决定从博客入手，设计风格参考了技术胖(B站UP主)的博客设计。<br>前后端分离：<br>前端使用的是React+Antd+TS来搭建的，包括博客后台管理系统<br>后端使用的是NestJS+MongoDB来搭建的，写接口服务给前端使用</p>
<p>这好像是第一次尝试写后端接口，还是很有成就感的。</p>
<p>博客可以跑起来以后，只是在本地运行的，没有服务器部署，于是用了内网穿透来让外网访问。<br>当时博客本地运行在公司的电脑上…</p>
<h4 id="迁移"><a href="#迁移" class="headerlink" title="迁移"></a>迁移</h4><p>21年初买了一个云服务器, 又买了域名、备案，然后把博客项目迁移到云服务器上运行，这次再也不用内网穿透了。<br>博客访问地址:  <a class="link"   href="https://sonders.cn/" >https://sonders.cn<i class="fas fa-external-link-alt"></i></a><br>等云服务器到期后，如不续费，大概就停了。</p>
<h4 id="回归Hexo"><a href="#回归Hexo" class="headerlink" title="回归Hexo"></a>回归Hexo</h4><p>使用云服务器虽然更好，但是费用也不算低，利用率不算特别高，但是部署在Github上的话，不出意外应该是千年不变的…<br>所以还是决定重新整一个Hexo博客出来，这次选择了Keep主题<br>相比较于最开始Hexo博客，这次新增了不少功能：</p>
<ul>
<li>评论</li>
<li>自动化部署</li>
<li>字数统计</li>
<li>首次打开的礼花特效</li>
<li>搜索</li>
<li>根据字数显示的“小杯，中杯，大杯”</li>
</ul>
<p>由此可见，最初搭建的Hexo博客确实非常简陋，那时看不懂代码…</p>
<h4 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h4><p>虽然是新瓶装旧酒，但这次也自定义了一些新功能，之后有好的点子也会提现在博客上。</p>
]]></content>
      <categories>
        <category>自言自语</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>放弃幻想，轻装前行</title>
    <url>/2022/08/13/%E6%94%BE%E5%BC%83%E5%B9%BB%E6%83%B3%EF%BC%8C%E8%BD%BB%E8%A3%85%E5%89%8D%E8%A1%8C/</url>
    <content><![CDATA[<blockquote>
<p>周末闲来无事，有写东西的一股冲动， 就当是一种放松吧。</p>
</blockquote>
<h4 id="旅行"><a href="#旅行" class="headerlink" title="旅行"></a>旅行</h4><p>为什么想旅行？<br>旅行有一个好处，就是对于目的地只是暂留一段时间，而不是定居。这样对于那里的风景人文都属于走马观花，而不需要了解不好的一面，所以对于旅行，人是放松的。玩几天就走了，玩的开心，下次还来，玩的不好，就再见了。<br>我是在微博上看到的一个旅行博主，叫杨旭游记，杨旭开着房车环游中国，看的我心痒难耐，也很想自驾游。<br>于是，我这个从没去玩过的人开始幻想如何自驾游。<br>首先，我要准备好换装的轮胎，备用的汽油，一定量的食物和水，一份中国地图，一种或多种防身的器械，换洗的衣服若干。<br>当然，剩下的就是规划路线，这让我有些不好抉择。<br>有这么几个大方向的路线：</p>
<ul>
<li>河南-山东-天津-北京-河北-山西-陕西-重庆-湖北-河南</li>
<li>河南-陕西-甘肃-青海-新疆-西藏-原路返回</li>
<li>河南-安徽-浙江-上海-江苏-山东-河南</li>
</ul>
<p>规划到这里，我还是不知道怎么规划自驾游的路线。<br>我想看美丽的大山东去爬泰山，我想去天津听相声吃包子，我想去西藏净化心灵大哭一场，可是我还是不知道如何开始，以及是否有能力完成规划好的路线。<br>怎么能没有可爱的大熊猫呢，怎么能没有广阔的大草原呢，中国这么大，人这么多，一路上肯定会有各种各样的问题和感动。<br>我喜欢人们朴实的情感和温暖，我喜欢好吃的食物和果腹感。<br>可是，幻想到这里，我连车子都没有，如何完成自驾游呢，我是不是应该先买一辆车，是不是要先学会如何修车和关于汽车的各种知识，是不是要锻炼应对突发情况的技能。<br>我喜欢阳光洒在身上的触感。</p>
<h4 id="骑行"><a href="#骑行" class="headerlink" title="骑行"></a>骑行</h4><p>上学时，我骑着借来的山地自行车，在学校周围骑来骑去，很是惬意，无所事事，没有烦恼的惬意。<br>直到去年，通过团建我才再次骑着车环岛骑行，非常放松和舒适。于是我又开始了想要买一辆属于自己的山地自行车的幻想，除了用来上下班最后一公里的通勤外，还可以在闲暇时间去穿过大街小巷，穿过人山人海，享受着风在身上掠过的清爽，领略四周向我身后快速退去的感觉，保持着注意力在道路之上驰骋。<br>去年开始我开始统计和总结一年之中做到和没做到的事情，凡是做到的事情我把它公开记录，凡是没有做到的事情我偷偷的为自己感到惭愧和对时间不复返的遗憾。回看这些用数据统计的事情，会有一种成就感，哪怕只是某段时间坚持了跑步和阅读，或者吃到了一顿可口的饭菜，这些都会让我感到舒服。<br>可是骑行的事情却一直没有落实，这让我对时间的飞逝感到有些焦虑，我担心时间就这么过去了，而我一无所获的原地不动。<br>我不喜欢感受时间的飞逝感，可随着一天一天的过去，我为自己的懒惰感到惭愧。<br>我幻想我有一辆山地自行车，穿梭在树荫密布的道路上，穿梭在铺满玉米的道路上，就像那时我骑着红色的山地自行车穿梭在去姥姥家的道路上，我很怀念那段时光。</p>
<h4 id="吃饭"><a href="#吃饭" class="headerlink" title="吃饭"></a>吃饭</h4><p>如果有一顿饭是让我能提起胃口的，那么不管多少钱我都愿意为之买单。<br>食欲和胃口对我而言有点稀少，我很少在到饭点时能提起胃口，最后不得不选择昨日的选择，我想吃放学时回到家就已做好的饭菜，我想吃充满香味的汤面，我想吃新做的茶叶蛋…<br>我想坐在阳光充裕的院子里大口吃面条，吃完再来一碗，还不用刷碗。<br>我想在傍晚吃着馒头和炒肉，最后再喝上一碗米茶，米一定不要太熟。<br>我想再炸一次火腿肠，就像少年时享受着装满一碗的快乐。<br>我想去吃一顿每一个都双份的肯德基，吃不完没关系，带回去慢慢吃。<br>我还想吃一个属于我的生日蛋糕，我要先吃奶油，再吃底下的面包。<br>那该有多快乐。</p>
<h4 id="日子"><a href="#日子" class="headerlink" title="日子"></a>日子</h4><p>我想要拥抱正常和幸福的生活，过上一日三餐，周末春游的小日子。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>轻装前行</tag>
      </tags>
  </entry>
  <entry>
    <title>2022年08月30日</title>
    <url>/2022/08/30/2022%E5%B9%B408%E6%9C%8830%E6%97%A5/</url>
    <content><![CDATA[<p>前几日体检结果下来，动脉粥样硬化竟高于正常值0.3，属于偏高。<br>以后要主要作息和饮食了</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>2022/9/5</title>
    <url>/2022/09/05/2022-9-5/</url>
    <content><![CDATA[<p>痛苦</p>
]]></content>
  </entry>
  <entry>
    <title>IM集成</title>
    <url>/2022/09/05/IM%E9%9B%86%E6%88%90/</url>
    <content><![CDATA[<h3 id="融云IM集成"><a href="#融云IM集成" class="headerlink" title="融云IM集成"></a>融云IM集成</h3><blockquote>
<p>融云即时通讯产品支持单聊、群聊、超级群、聊天室 多种业务形态，提供丰富的客户端和服务端接口，大部分能力支持开箱即用。</p>
</blockquote>
<p>融云的架构设计特点：</p>
<ul>
<li>无需改变现有 App 的架构，直接嵌入现有代码框架中；</li>
<li>无需改变现有 App Server 的架构，独立部署一份用于用户授权的 Service 即可；</li>
<li>专注于提供通讯能力，使用私有的二进制通信协议，消息轻量、有序、不丢消息；</li>
<li>安全的身份认证和授权方式，无需担心 SDK 能力滥用（盗用身份的垃圾消息、垃圾群发）问题。</li>
</ul>
<h3 id="客户端集成"><a href="#客户端集成" class="headerlink" title="客户端集成"></a>客户端集成</h3><h4 id="导入SDK"><a href="#导入SDK" class="headerlink" title="导入SDK"></a>导入SDK</h4><p>可以参考官方<a class="link"   href="https://doc.rongcloud.cn/im/Web/5.X/noui/import" >文档<i class="fas fa-external-link-alt"></i></a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 安装 IM 5.0 最新版本</span></span><br><span class="line">npm install @rongcloud/engine@latest @rongcloud/imlib-next@latest -S</span><br><span class="line"></span><br><span class="line"><span class="comment">// CMD</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">RongIMLib</span> = <span class="built_in">require</span>(<span class="string">&#x27;@rongcloud/imlib-next&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// ES</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="title class_">RongIMLib</span> <span class="keyword">from</span> <span class="string">&#x27;@rongcloud/imlib-next&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// CDN链接</span></span><br><span class="line">&lt;script src=<span class="string">&quot;https://cdn.ronghub.com/RongIMLib-5.3.0.prod.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">RongIMLib</span>.<span class="title function_">init</span>(&#123;</span><br><span class="line">    <span class="attr">appkey</span>: <span class="string">&#x27;xxxxxx&#x27;</span> <span class="comment">//  这里是在融云控制台申请的应用appkey</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加事件监听</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Events</span> = <span class="title class_">RongIMLib</span>.<span class="property">Events</span></span><br><span class="line"><span class="title class_">RongIMLib</span>.<span class="title function_">addEventListener</span>(<span class="title class_">Events</span>.<span class="property">CONNECTING</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;正在链接服务器&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title class_">RongIMLib</span>.<span class="title function_">addEventListener</span>(<span class="title class_">Events</span>.<span class="property">CONNECTED</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;已经链接到服务器&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title class_">RongIMLib</span>.<span class="title function_">addEventListener</span>(<span class="title class_">Events</span>.<span class="property">MESSAGES</span>, <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;接收到消息&#x27;</span>, res)</span><br><span class="line">    <span class="comment">// res.messages 这里收到消息后进行展示处理</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h4 id="用户连接IM"><a href="#用户连接IM" class="headerlink" title="用户连接IM"></a>用户连接IM</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// token 用户的token</span></span><br><span class="line">    <span class="title class_">RongIMLib</span>.<span class="title function_">connect</span>(token).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">code</span> === <span class="title class_">RongIMLib</span>.<span class="property">ErrorCode</span>.<span class="property">SUCCESS</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;链接成功, 链接用户 id 为: &#x27;</span>, res.<span class="property">data</span>.<span class="property">userId</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;链接失败, code:&#x27;</span>, res.<span class="property">code</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="发送消息"><a href="#发送消息" class="headerlink" title="发送消息"></a>发送消息</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义消息投送目标会话</span></span><br><span class="line"><span class="keyword">const</span> conversation = &#123;</span><br><span class="line">    <span class="attr">conversationType</span>: <span class="title class_">RongIMLib</span>.<span class="property">ConversationType</span>.<span class="property">PRIVATE</span>,</span><br><span class="line">    <span class="attr">targetId</span>: <span class="string">&quot;userID&quot;</span> <span class="comment">// 这里是接收人ID</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 发送文本（表情）消息</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sendTextMsg</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 实例化待发送消息，RongIMLib.TextMessage 为内置文本型消息</span></span><br><span class="line">    <span class="keyword">const</span> message = <span class="keyword">new</span> <span class="title class_">RongIMLib</span>.<span class="title class_">TextMessage</span>(&#123;</span><br><span class="line">        <span class="attr">content</span>: <span class="string">&quot;这里是发送的文本消息内容&quot;</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 发送</span></span><br><span class="line">    <span class="title class_">RongIMLib</span>.<span class="title function_">sendMessage</span>(conversation, message).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;发送回调&#x27;</span>, res)</span><br><span class="line">        <span class="comment">// 发送成功后展示到对话框中</span></span><br><span class="line">    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  发送图片消息</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sendImgMsg</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// file = &lt;input type=&quot;file&quot; /&gt; 所选的文件信息</span></span><br><span class="line">    <span class="keyword">const</span> msgBody = &#123;</span><br><span class="line">        file, <span class="comment">// 待上传文件</span></span><br><span class="line">        <span class="attr">user</span>: &#123; <span class="attr">id</span>: <span class="string">&#x27;&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>, <span class="attr">portraitUri</span>: <span class="string">&#x27;&#x27;</span>, <span class="attr">extra</span>: <span class="string">&#x27;&#x27;</span> &#125;, <span class="comment">// 消息中携带的用户信息，非必填</span></span><br><span class="line">        <span class="attr">extra</span>: <span class="string">&quot;连同图片一起发送的文本&quot;</span> <span class="comment">// 消息中携带的透传信息，非必填</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> hooks = &#123;</span><br><span class="line">        onProgress (progress) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;progress&quot;</span>, progress)</span><br><span class="line">        &#125;,  <span class="comment">// 上传进度监听，可选</span></span><br><span class="line">        onComplete (fileInfo) &#123; <span class="comment">// 上传完成时的回调钩子，可选</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(fileInfo.<span class="property">url</span>) <span class="comment">// 文件存储地址 图片cdn链接</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> options = &#123;</span><br><span class="line">        <span class="attr">contentDisposition</span>: <span class="string">&#x27;inline&#x27;</span> <span class="comment">// &#x27;inline&#x27; | &#x27;attachment&#x27; , 使用 aws 上传时返回链接在浏览器中的展示形式</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">RongIMLib</span>.<span class="title function_">sendImageMessage</span>(conversation,msgBody,hooks,options).<span class="title function_">then</span>(<span class="function">(<span class="params">&#123; code, data &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data) <span class="comment">// 发送回调结果</span></span><br><span class="line">        <span class="keyword">if</span> (code === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 发送成功 可以展示到对话框的还有消息侧</span></span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;发送成功&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">alert</span>(<span class="string">&quot;图片发送失败&quot;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="自定义消息"><a href="#自定义消息" class="headerlink" title="自定义消息"></a>自定义消息</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注册自定义消息  s:person 自定义</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">PersonMessage</span> = <span class="title class_">RongIMLib</span>.<span class="title function_">registerMessageType</span>(<span class="string">&#x27;s:person&#x27;</span>, <span class="literal">false</span>, <span class="literal">false</span>, [], <span class="literal">false</span>)</span><br><span class="line"><span class="comment">// 构建要发送的自定义消息</span></span><br><span class="line"><span class="keyword">const</span> message = <span class="keyword">new</span> <span class="title class_">PersonMessage</span>([&#123;<span class="attr">desc</span>: <span class="string">&quot;查询订单号&quot;</span>, <span class="attr">orderID</span>: <span class="number">123</span>&#125;,&#123;<span class="attr">desc</span>: <span class="string">&quot;查询我是谁&quot;</span>, <span class="attr">orderID</span>: <span class="number">123</span>&#125;])</span><br><span class="line"><span class="comment">// 发送消息</span></span><br><span class="line"><span class="title class_">RongIMLib</span>.<span class="title function_">sendMessage</span>(&#123;</span><br><span class="line">    <span class="attr">conversationType</span>: <span class="title class_">RongIMLib</span>.<span class="property">ConversationType</span>.<span class="property">PRIVATE</span>,</span><br><span class="line">    <span class="attr">targetId</span>: <span class="string">&quot;userID&quot;</span></span><br><span class="line">&#125;, message).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">code</span> === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">code</span>, res.<span class="property">data</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">code</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h4 id="表情加载"><a href="#表情加载" class="headerlink" title="表情加载"></a>表情加载</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入</span></span><br><span class="line">&lt;script src=<span class="string">&quot;https://cdn.ronghub.com/RongEmoji-2.2.10.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"> <span class="comment">// 表情信息可参考 http://unicode.org/emoji/charts/full-emoji-list.html</span></span><br><span class="line"><span class="keyword">const</span> config = &#123;</span><br><span class="line">    <span class="attr">size</span>: <span class="number">25</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;//f2e.cn.ronghub.com/sdk/emoji-48.png&#x27;</span>,</span><br><span class="line">    <span class="attr">lang</span>: <span class="string">&#x27;en&#x27;</span>,</span><br><span class="line">    <span class="attr">extension</span>: &#123;</span><br><span class="line">        <span class="attr">dataSource</span>: &#123;</span><br><span class="line">            <span class="attr">u1F914</span>: &#123; <span class="comment">// 自定义 u1F914 对应的表情</span></span><br><span class="line">                <span class="attr">en</span>: <span class="string">&#x27;thinking face&#x27;</span>, <span class="comment">// 英文名称</span></span><br><span class="line">                <span class="attr">zh</span>: <span class="string">&#x27;思考&#x27;</span>, <span class="comment">// 中文名称</span></span><br><span class="line">                <span class="attr">tag</span>: <span class="string">&#x27;🤔&#x27;</span>, <span class="comment">// 原生 Emoji</span></span><br><span class="line">                <span class="attr">position</span>: <span class="string">&#x27;0 0&#x27;</span> <span class="comment">// 所在背景图位置坐标</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;//cdn.ronghub.com/thinking-face.png&#x27;</span> <span class="comment">// 新增 Emoji 背景图 url</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title class_">RongIMLib</span>.<span class="property">RongIMEmoji</span>.<span class="title function_">init</span>(config);</span><br><span class="line"><span class="comment">// RongIMEmojiList 是表情列表 可展示到view中供选择</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">RongIMEmojiList</span> = <span class="title class_">RongIMLib</span>.<span class="property">RongIMEmoji</span>.<span class="property">list</span>;</span><br><span class="line"><span class="comment">// 部分示例</span></span><br><span class="line">😊😭😂💔😑😟🐶🎉📢🤔🌙💤🍦🚀</span><br></pre></td></tr></table></figure>


<h4 id="关于语音-x2F-视频通话"><a href="#关于语音-x2F-视频通话" class="headerlink" title="关于语音&#x2F;视频通话"></a>关于语音&#x2F;视频通话</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入一下链接  顺序不变</span></span><br><span class="line">&lt;script src=<span class="string">&quot;https://cdn.ronghub.com/RongIMLib-5.3.0.prod.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="comment">// RTCLib v5</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.ronghub.com/RCRTC-5.3.12.prod.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"> <span class="comment">// RongCallLib</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.ronghub.com/RCCall-5.0.latest.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span> </span><br><span class="line"></span><br><span class="line"><span class="comment">// 当RongIMLib.connect连接成功后，在成功回调中初始化音视频</span></span><br><span class="line"> rtcClient = <span class="title class_">RongIMLib</span>.<span class="title function_">installPlugin</span>(<span class="variable constant_">RCRTC</span>.<span class="property">installer</span>)</span><br><span class="line">    caller = <span class="title class_">RongIMLib</span>.<span class="title function_">installPlugin</span>(<span class="title class_">RCCall</span>.<span class="property">installer</span>, &#123;</span><br><span class="line">        rtcClient, </span><br><span class="line">        <span class="title function_">onSession</span>(<span class="params">session</span>)&#123;</span><br><span class="line">            session.<span class="title function_">registerSessionListener</span>(&#123;</span><br><span class="line">                <span class="comment">// 这里的内容参考开发文档</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 我这里由于业务不需要音视频所以没有深度测试，只是简单测试了下打电话功能，暂时不做仔细记录</span></span><br></pre></td></tr></table></figure>
<h4 id="展示对话框"><a href="#展示对话框" class="headerlink" title="展示对话框"></a>展示对话框</h4><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://cdn.staticaly.com/gh/sonderss/image-hosting@master/1.1n3x6v41v3c0.webp"
                      alt="1"
                ></p>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>本文仅以WEB客户端集成做记录，如果是实现聊天对话客服功能，完全够用了。</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>IM</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaSpringBoot</title>
    <url>/2022/09/06/JavaSpringBoot/</url>
    <content><![CDATA[<h4 id="Java项目创建"><a href="#Java项目创建" class="headerlink" title="Java项目创建"></a>Java项目创建</h4><ul>
<li>新建 -》 项目 选择 <strong>Spring Initializr</strong></li>
<li>在下一步之前选择服务URL，确保<strong><a class="link"   href="https://start.spring.io/" >https://start.spring.io/<i class="fas fa-external-link-alt"></i></a></strong> 可访问，如不能访问，可自定义设置，我配置了 <strong><a class="link"   href="https://start.aliyun.com/" >https://start.aliyun.com/<i class="fas fa-external-link-alt"></i></a></strong></li>
<li>点击下一步，在添加依赖里，选择 <strong>Web</strong> -》 勾选 <strong>Spring Web</strong>，以及 <strong>Developer Tools</strong> 勾选 <strong>lombok</strong> （其他可之后添加，也可仅先添加web）</li>
</ul>
<h4 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h4><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://cdn.staticaly.com/gh/sonderss/image-hosting@master/%E5%90%AF%E5%8A%A8.6ftx9a6b7ac0.webp"
                      alt="启动"
                ></p>
<p>找到项目中的DemoApplication，其中有main方法的类，启动SpringBoot运行main</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://cdn.staticaly.com/gh/sonderss/image-hosting@master/5.5ltyxxrkz040.webp"
                      alt="5"
                ></p>
<p>出现以上图像，说明启动成功， 访问<a class="link"   href="http://localhost:8080/" >http://localhost:8080<i class="fas fa-external-link-alt"></i></a></p>
<h4 id="创建Controller"><a href="#创建Controller" class="headerlink" title="创建Controller"></a>创建Controller</h4><p>找到项目中 src -》 main -》 java -》 com 下新建controller目录，然后在该目录下新建类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/GetUserList&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List <span class="title function_">GetUser</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Object&gt; userList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Object&gt;();</span><br><span class="line">        HashMap&lt;String, Object&gt; model = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;();</span><br><span class="line">        model.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;sonder&quot;</span>);</span><br><span class="line">        model.put(<span class="string">&quot;age&quot;</span>, <span class="number">18</span>);</span><br><span class="line">        model.put(<span class="string">&quot;sex&quot;</span>, <span class="string">&quot;1&quot;</span>);</span><br><span class="line">        userList.add(model);</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<br />
<br />
访问http://localhost:8080/GetUserList 可得到用户列表的Json数据

<p>下一章，数据库的应用</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库连接</title>
    <url>/2022/09/07/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5/</url>
    <content><![CDATA[<h4 id="关系型数据库MySQL"><a href="#关系型数据库MySQL" class="headerlink" title="关系型数据库MySQL"></a>关系型数据库MySQL</h4><blockquote>
<p>MySQL是一种关系型数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。</p>
</blockquote>
<h5 id="MySQL特点"><a href="#MySQL特点" class="headerlink" title="MySQL特点"></a>MySQL特点</h5><ul>
<li>体积小</li>
<li>速度快</li>
<li>成本低</li>
</ul>
<h4 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h4><p>在java项目下的 <strong>resources</strong> 目录中找到 <strong>application.properties</strong> 文件</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 应用名称</span></span><br><span class="line"><span class="string">spring.application.name=demo</span></span><br><span class="line"><span class="comment"># 应用服务 WEB 访问端口</span></span><br><span class="line"><span class="string">server.port=8080</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库名称</span></span><br><span class="line"><span class="string">spring.datasource.name=javastudy</span></span><br><span class="line"><span class="comment"># 数据库连接URL</span></span><br><span class="line"><span class="string">spring.datasource.url=jdbc:mysql://localhost:3306/数据库名称?serverTimezone=Asia/Shanghai</span></span><br><span class="line"><span class="comment"># 用户名</span></span><br><span class="line"><span class="string">spring.datasource.username=root</span></span><br><span class="line"><span class="comment"># 密码</span></span><br><span class="line"><span class="string">spring.datasource.password=XXX</span></span><br><span class="line"><span class="comment"># 数据库驱动</span></span><br><span class="line"><span class="string">spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver</span></span><br></pre></td></tr></table></figure>


<h4 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h4><p>由于我在创建项目中并没有直接安装MySQL相关依赖，于是直接在 <strong>pom.xml</strong> 中添加，代码如下</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 这里需要注释 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;groupId&gt;org.springframework&lt;/groupId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;version&gt;5.3.20&lt;/version&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;/dependency&gt;--&gt;</span></span><br></pre></td></tr></table></figure>


<h4 id="问题示例"><a href="#问题示例" class="headerlink" title="问题示例"></a>问题示例</h4><p>在一切准备就绪后，启动报错，如“The server time zone value ‘�й���׼ʱ��‘ is unrecogni…”, 这是时区问题，在连接数据库时，加上UTC即可。<br /><br>还有“To display the conditions report re-run your application with ‘debug’ enable…”，这里是在添加了依赖后，由于“spring-jdbc”重复导致，注释后就可以了，此外在整个过程中，重启IDE几次，以及右侧Maven刷新了几次，最终解决问题，完美连接上数据库以及获取数据</p>
<h4 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"><span class="meta">@RequestMapping(&quot;/GetUserFromDB&quot;)</span></span><br><span class="line"><span class="keyword">public</span> List <span class="title function_">GetUserFromDB</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select  * from user&quot;</span>;</span><br><span class="line">    List&lt;Map&lt;String, Object&gt;&gt; list = jdbcTemplate.queryForList(sql);</span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>中文代码</title>
    <url>/2022/09/06/%E4%B8%AD%E6%96%87%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<blockquote>
<p>如果代码用中文来写，会是什么样的？</p>
</blockquote>
<h4 id="中文代码"><a href="#中文代码" class="headerlink" title="中文代码"></a>中文代码</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> 用户组 = [</span><br><span class="line">    &#123;</span><br><span class="line">        名字:<span class="string">&quot;小明&quot;</span>,</span><br><span class="line">        年龄: <span class="number">18</span>,</span><br><span class="line">        性别:<span class="string">&quot;男&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        名字:<span class="string">&quot;小红&quot;</span>,</span><br><span class="line">        年龄: <span class="number">18</span>,</span><br><span class="line">        性别:<span class="string">&quot;女&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> 女 = 用户组.<span class="title function_">find</span>(用户 =&gt; 用户.性别 == <span class="string">&quot;女&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> 男 = 用户组.<span class="title function_">find</span>(用户 =&gt; 用户.性别 == <span class="string">&quot;男&quot;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(女) <span class="comment">// 结果为  &#123; &#x27;名字&#x27;: &#x27;小红&#x27;, &#x27;年龄&#x27;: 18, &#x27;性别&#x27;: &#x27;女&#x27; &#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(男) <span class="comment">// 结果为  &#123; &#x27;名字&#x27;: &#x27;小明&#x27;, &#x27;年龄&#x27;: 18, &#x27;性别&#x27;: &#x27;男&#x27; &#125;</span></span><br></pre></td></tr></table></figure>


<h4 id="写一个class"><a href="#写一个class" class="headerlink" title="写一个class"></a>写一个class</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> 动物 &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">动物名称</span>) &#123;</span><br><span class="line">       <span class="variable language_">this</span>.名字 = 动物名称</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    名字() &#123;</span><br><span class="line">      <span class="keyword">return</span>  <span class="variable language_">this</span>.名字</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    吃饭() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.名字 + <span class="string">&quot;开始吃饭&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    玩耍() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.名字 + <span class="string">&quot;开始玩耍&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> 真狗 = <span class="keyword">new</span> 动物(<span class="string">&quot;小狗&quot;</span>)</span><br><span class="line"></span><br><span class="line">真狗.吃饭() <span class="comment">// 结果： 小狗开始吃饭</span></span><br><span class="line">真狗.玩耍() <span class="comment">// 结果： 小狗开始玩耍</span></span><br></pre></td></tr></table></figure>

<h4 id="写一个循环"><a href="#写一个循环" class="headerlink" title="写一个循环"></a>写一个循环</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> 随机数组  = [<span class="number">2</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> 外层数=<span class="number">0</span>; 外层数&lt;随机数组.<span class="property">length</span>; 外层数++) &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> 内层数=<span class="number">0</span>;内层数&lt;随机数组.<span class="property">length</span>;内层数++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(随机数组[外层数] &lt; 随机数组[内层数]) &#123;</span><br><span class="line">            <span class="keyword">let</span> 暂存数 =  随机数组[外层数]</span><br><span class="line">            随机数组[外层数] = 随机数组[内层数]</span><br><span class="line">            随机数组[内层数] = 暂存数</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(随机数组) <span class="comment">// [ 1, 2, 3, 4, 5 ]</span></span><br><span class="line"></span><br><span class="line">或者这样排序</span><br><span class="line"></span><br><span class="line">随机数组.<span class="title function_">sort</span>(<span class="function">(<span class="params">a,b</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span>  a - b</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(随机数组) <span class="comment">// [ 1, 2, 3, 4, 5 ]</span></span><br><span class="line"></span><br><span class="line">结果是一样的</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>记录</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库操作</title>
    <url>/2022/09/07/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<blockquote>
<p>创建HTML页面，可视化数据操作</p>
</blockquote>
<h4 id="配置视图解析器"><a href="#配置视图解析器" class="headerlink" title="配置视图解析器"></a>配置视图解析器</h4><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">resources</span> <span class="string">-》</span> <span class="string">application.properties</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置视图解析器  </span></span><br><span class="line"><span class="string">spring.mvc.view.prefix=</span> <span class="string">/</span></span><br><span class="line"><span class="string">spring.mvc.view.suffix=</span> <span class="string">.html</span></span><br></pre></td></tr></table></figure>
<p>在resources目录下，找到templates目录，并创建一个html文件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入在static -》 js -》 jquery文件 这里需要注意 ../, ./, / 的区别--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- body 里内容为form表单，根据对应输入框ID操作数据 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">&quot;table&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin: 20px&quot;</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 这里内容根据数据 动态追加 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="创建控制器"><a href="#创建控制器" class="headerlink" title="创建控制器"></a>创建控制器</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/page&quot;)</span></span><br><span class="line"><span class="comment">//@RestController</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HtmlController</span> &#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/addUser&quot;)</span></span><br><span class="line">    <span class="keyword">public</span>  String <span class="title function_">addUser</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;addUser&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>视图如下：</p>
<table>
<thead>
<tr>
<th>名字</th>
<th>年龄</th>
<th>性别</th>
</tr>
</thead>
<tbody><tr>
<td>sonder</td>
<td>18</td>
<td>1</td>
</tr>
<tr>
<td>oldFriend</td>
<td>17</td>
<td>0</td>
</tr>
</tbody></table>
<h4 id="数据操作"><a href="#数据操作" class="headerlink" title="数据操作"></a>数据操作</h4><p>sql语句可参考 <a class="link"   href="https://www.runoob.com/mysql" >https://www.runoob.com/mysql<i class="fas fa-external-link-alt"></i></a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 添加用户</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/AddUser&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Object <span class="title function_">AddUser</span> <span class="params">(String name, Number age, String sex)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;INSERT INTO user (name, age, sex) VALUES (?,?,?);&quot;</span>;</span><br><span class="line">    HashMap&lt;String, Object&gt; result = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;();</span><br><span class="line">    <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> jdbcTemplate.update(sql, name, age, sex);</span><br><span class="line">    <span class="comment">// getResult为封装的函数，处理返回给前端的数据</span></span><br><span class="line">    <span class="keyword">return</span> getResult(result, res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据用户名删除用户</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/DelUser&quot;)</span></span><br><span class="line"><span class="keyword">public</span>  Object <span class="title function_">DelUser</span><span class="params">(String name)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;DELETE  FROM  user WHERE name=?;&quot;</span>;</span><br><span class="line">    HashMap&lt;String, Object&gt; result = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;();</span><br><span class="line">    <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> jdbcTemplate.update(sql, name);</span><br><span class="line">    <span class="keyword">return</span> getResult(result, res);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>获取url参数</title>
    <url>/2022/09/08/%E8%8E%B7%E5%8F%96url%E5%8F%82%E6%95%B0/</url>
    <content><![CDATA[<blockquote>
<p>从URL中获取参数的封装方法</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getQueryString</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;(^|&amp;)&quot;</span> + e + <span class="string">&quot;=([^&amp;]*)(&amp;|$)&quot;</span>, <span class="string">&quot;i&quot;</span>),</span><br><span class="line">        n = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>.<span class="title function_">substr</span>(<span class="number">1</span>).<span class="title function_">match</span>(t);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span> != n ? <span class="built_in">unescape</span>(n[<span class="number">2</span>]) : <span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">getQueryString</span>(<span class="string">&quot;id&quot;</span>) <span class="comment">// 返回ID值</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>URL</tag>
      </tags>
  </entry>
  <entry>
    <title>信号与系统01</title>
    <url>/2022/09/20/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F01/</url>
    <content><![CDATA[<h4 id="信号分类"><a class="markdownIt-Anchor" href="#信号分类"></a> 信号分类</h4>
<table>
<thead>
<tr>
<th style="text-align:center">确定信号</th>
<th style="text-align:center">随机信号</th>
<th style="text-align:center">连续信号</th>
<th style="text-align:left">离散信号</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">可用确定时间函数表示的信号</td>
<td style="text-align:center">不能用确定的函数描述，只有统计特性</td>
<td style="text-align:center">连续范围内有定义的信号</td>
<td style="text-align:left">只在离散的瞬间才有定义</td>
</tr>
</tbody>
</table>
<h5 id="周期与非周期"><a class="markdownIt-Anchor" href="#周期与非周期"></a> 周期与非周期</h5>
<blockquote>
<p>周期信号: 是定义在（-<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">∞</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">∞</span></span></span></span>）区间，每隔一定时间按相同规律重复变化的信号</p>
</blockquote>
<blockquote>
<p>非周期信号: 没有在一定时间按照相同规律重复变化的信号</p>
</blockquote>
<p>例：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo><mo>=</mo><mi>f</mi><mo>(</mo><mi>t</mi><mo>+</mo><mi>m</mi><mi>T</mi><mo>)</mo><mo separator="true">,</mo><mi>m</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mo>±</mo><mn>1</mn><mo separator="true">,</mo><mo>±</mo><mn>2</mn><mo separator="true">,</mo><mo>±</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">f(t)=f(t+mT), m=0, \pm1, \pm2,  \pm3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mbin">+</span><span class="mord mathit">m</span><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mord mathit">m</span><span class="mrel">=</span><span class="mord mathrm">0</span><span class="mpunct">,</span><span class="mord">±</span><span class="mord mathrm">1</span><span class="mpunct">,</span><span class="mord">±</span><span class="mord mathrm">2</span><span class="mpunct">,</span><span class="mord">±</span><span class="mord mathrm">3</span></span></span></span></p>
<h5 id="能量信号和功率信号"><a class="markdownIt-Anchor" href="#能量信号和功率信号"></a> 能量信号和功率信号</h5>
<p>将信号<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span></span></span></span>施加在1Ω电阻上，它所消耗的瞬时功率为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">|f(t)|^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">∣</span><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span><span class="mord"><span class="mord mathrm">∣</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></p>
<blockquote>
<p>能量信号：能量有限<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>&lt;</mo></mrow><annotation encoding="application/x-tex">0&lt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">0</span><span class="mrel">&lt;</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.05764em;">E</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo></mrow><annotation encoding="application/x-tex">&lt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.5391em;"></span><span class="strut bottom" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="base textstyle uncramped"><span class="mrel">&lt;</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">∞</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">P=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.13889em;">P</span><span class="mrel">=</span><span class="mord mathrm">0</span></span></span></span>，功率为0</p>
</blockquote>
<blockquote>
<p>功率信号：功率有限<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>&lt;</mo></mrow><annotation encoding="application/x-tex">0 &lt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">0</span><span class="mrel">&lt;</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.13889em;">P</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo></mrow><annotation encoding="application/x-tex">&lt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.5391em;"></span><span class="strut bottom" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="base textstyle uncramped"><span class="mrel">&lt;</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">∞</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>=</mo></mrow><annotation encoding="application/x-tex">E=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.05764em;">E</span><span class="mrel">=</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">∞</span></span></span></span> 的信号</p>
</blockquote>
<h5 id="因果信号和非因果信号"><a class="markdownIt-Anchor" href="#因果信号和非因果信号"></a> 因果信号和非因果信号</h5>
<blockquote>
<p>因果信号：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>≥</mo><mn>0</mn><mo separator="true">,</mo><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">t \geq  0, f(t)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">t</span><span class="mrel">≥</span><span class="mord mathrm">0</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathrm">0</span></span></span></span>的信号<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span></span></span></span>，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">t=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.64444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">t</span><span class="mrel">=</span><span class="mord mathrm">0</span></span></span></span>时接入的信号，例如阶跃信号</p>
</blockquote>
<blockquote>
<p>非因果信号：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>&lt;</mo><mn>0</mn><mo separator="true">,</mo><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">t&lt;0,f(t)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">t</span><span class="mrel">&lt;</span><span class="mord mathrm">0</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathrm">0</span></span></span></span>的信号，（除0信号外）</p>
</blockquote>
]]></content>
      <categories>
        <category>信号与系统</category>
      </categories>
      <tags>
        <tag>信号与系统</tag>
      </tags>
  </entry>
</search>
